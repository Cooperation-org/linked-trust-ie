{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_reality",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_usdc",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "answerStatus",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "questionID",
          "type": "bytes32"
        }
      ],
      "name": "AnswerStatus",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amountClaimed",
          "type": "uint256"
        }
      ],
      "name": "Claimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "questionSubmitted",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "questionID",
          "type": "bytes32"
        }
      ],
      "name": "QuestionSubmitted",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_add",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "addressConcatLeaf",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "arbitrator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "challengePeriod",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_effectiveDate",
          "type": "uint256"
        }
      ],
      "name": "checkAnswer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_effectiveDate",
          "type": "uint256"
        }
      ],
      "name": "checkAnswerStatus",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amountEx",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_effectiveDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_position",
          "type": "uint256"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_root",
          "type": "string"
        }
      ],
      "name": "getDateByRoot",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_effectiveDate",
          "type": "uint256"
        }
      ],
      "name": "getQIDByDate",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_effectiveDate",
          "type": "uint256"
        }
      ],
      "name": "getRootByDate",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_effectiveDate",
          "type": "uint256"
        }
      ],
      "name": "getTreeByDate",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "mapDateAddressPay",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "mapDateQuestionID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "mapDateRoot",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "mapDateToAnswer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "mapDateTree",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "mapRootToDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_merkleroot",
          "type": "string"
        },
        {
          "internalType": "string[]",
          "name": "_treeHash",
          "type": "string[]"
        }
      ],
      "name": "postQuestion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "rootExists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "space",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_input1",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_input2",
          "type": "string"
        }
      ],
      "name": "stringToHash",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_data",
          "type": "bytes32"
        }
      ],
      "name": "toHex",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "root",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "leaf",
          "type": "string"
        },
        {
          "internalType": "string[]",
          "name": "leaves",
          "type": "string[]"
        },
        {
          "internalType": "uint256",
          "name": "position",
          "type": "uint256"
        }
      ],
      "name": "verify",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6000805463ffffffff60a01b19166102a360a71b179055600180546001600160a01b031916815560c06040526080908152602d60f81b60a052600290620000479082620001aa565b503480156200005557600080fd5b506040516200244638038062002446833981016040819052620000789162000293565b6200008333620000b5565b600a80546001600160a01b039384166001600160a01b031991821617909155600b8054929093169116179055620002cb565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200013057607f821691505b6020821081036200015157634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001a557600081815260208120601f850160051c81016020861015620001805750805b601f850160051c820191505b81811015620001a1578281556001016200018c565b5050505b505050565b81516001600160401b03811115620001c657620001c662000105565b620001de81620001d784546200011b565b8462000157565b602080601f831160018114620002165760008415620001fd5750858301515b600019600386901b1c1916600185901b178555620001a1565b600085815260208120601f198616915b82811015620002475788860151825594840194600190910190840162000226565b5085821015620002665787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b80516001600160a01b03811681146200028e57600080fd5b919050565b60008060408385031215620002a757600080fd5b620002b28362000276565b9150620002c26020840162000276565b90509250929050565b61216b80620002db6000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c8063715018a6116100de578063bffd889311610097578063e20dee5011610071578063e20dee50146103ab578063efa9a9be146103d6578063f2fde38b146103e9578063f3f480d9146103fc57600080fd5b8063bffd889314610362578063cd09abec14610385578063e1964a691461039857600080fd5b8063715018a6146102db57806371c0d915146102e557806376a5cef3146103085780637d77869e1461032b5780638da5cb5b1461033e578063ad891ad41461034f57600080fd5b806349e894d81161013057806349e894d8146102375780634d0676d81461024a578063561444eb1461026a578063581d8f361461027d578063657d7ab8146102905780636cc6cde1146102b057600080fd5b806314a0db9b146101785780631e131bf2146101bb57806327af9e38146101db578063291637a2146101e35780633127718d146101f65780633c64678714610209575b600080fd5b6101a661018636600461188b565b600960209081526000928352604080842090915290825290205460ff1681565b60405190151581526020015b60405180910390f35b6101ce6101c93660046118b7565b610428565b6040516101b29190611931565b6101ce61049d565b6101ce6101f1366004611944565b61052b565b6101ce610204366004611a14565b6105cd565b610229610217366004611944565b60009081526005602052604090205490565b6040519081526020016101b2565b6101ce610245366004611944565b610648565b610229610258366004611944565b60056020526000908152604090205481565b6101ce610278366004611a78565b610694565b61022961028b366004611a9a565b6106cc565b6102a361029e366004611944565b6106f4565b6040516101b29190611ad7565b6001546102c3906001600160a01b031681565b6040516001600160a01b0390911681526020016101b2565b6102e36107e0565b005b6101a66102f3366004611944565b60009081526008602052604090205460ff1690565b6101a6610316366004611944565b60046020526000908152604090205460ff1681565b6101a6610339366004611bd8565b6107f4565b6000546001600160a01b03166102c3565b6102e361035d366004611944565b6109e6565b6101a6610370366004611944565b60086020526000908152604090205460ff1681565b6101ce610393366004611944565b610c41565b6102296103a6366004611c68565b610c5a565b6102296103b9366004611a9a565b805160208183018101805160078252928201919093012091525481565b6102e36103e4366004611cc2565b610e6b565b6102e36103f7366004611cee565b6111c0565b60005461041390600160a01b900463ffffffff1681565b60405163ffffffff90911681526020016101b2565b6060600061043533611239565b905060006104428461124f565b9050600082600260405160200161045a929190611d43565b604051602081830303815290604052905060008183604051602001610480929190611dd0565b60408051601f198184030181529190529450505050505b92915050565b600280546104aa90611d09565b80601f01602080910402602001604051908101604052809291908181526020018280546104d690611d09565b80156105235780601f106104f857610100808354040283529160200191610523565b820191906000526020600020905b81548152906001019060200180831161050657829003601f168201915b505050505081565b600081815260036020526040902080546060919061054890611d09565b80601f016020809104026020016040519081016040528092919081815260200182805461057490611d09565b80156105c15780601f10610596576101008083540402835291602001916105c1565b820191906000526020600020905b8154815290600101906020018083116105a457829003601f168201915b50505050509050919050565b6060610641600284846040516020016105e7929190611dd0565b60408051601f198184030181529082905261060191611dff565b602060405180830381855afa15801561061e573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906102459190611e1b565b9392505050565b6060610653826112e2565b610660608084901b6112e2565b60405161060f60f31b6020820152602281019290925260428201526062016040516020818303038152906040529050919050565b600660205281600052604060002081815481106106b057600080fd5b906000526020600020016000915091505080546104aa90611d09565b60006007826040516106de9190611dff565b9081526020016040518091039020549050919050565b606060066000838152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156107d557838290600052602060002001805461074890611d09565b80601f016020809104026020016040519081016040528092919081815260200182805461077490611d09565b80156107c15780601f10610796576101008083540402835291602001916107c1565b820191906000526020600020905b8154815290600101906020018083116107a457829003601f168201915b505050505081526020019060010190610729565b505050509050919050565b6107e8611494565b6107f260006114ee565b565b60008061082a604051806020016040528060008152508560008151811061081d5761081d611e34565b60200260200101516105cd565b905060005b845181101561090057600061085f6040518060200160405280600081525087848151811061081d5761081d611e34565b9050600061087c60405180602001604052806000815250896105cd565b9050858314801561088b575082155b15610898578093506108eb565b826000036108cd576108c6604051806020016040528060008152508860008151811061081d5761081d611e34565b93506108eb565b8583036108de576108c684826105cd565b6108e884836105cd565b93505b505080806108f890611e60565b91505061082f565b506002866040516020016109149190611dff565b60408051601f198184030181529082905261092e91611dff565b602060405180830381855afa15801561094b573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061096e9190611e1b565b6002826040516020016109819190611dff565b60408051601f198184030181529082905261099b91611dff565b602060405180830381855afa1580156109b8573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906109db9190611e1b565b149695505050505050565b60008181526004602052604090205460ff16610a495760405162461bcd60e51b815260206004820152601c60248201527f4e6f20526f6f742053746f72656420666f72207468617420646174650000000060448201526064015b60405180910390fd5b60008181526008602052604090205460ff1615610aa85760405162461bcd60e51b815260206004820152601760248201527f416e7377657220686173206265656e20636865636b65640000000000000000006044820152606401610a40565b600a5460008281526005602052604080822054905163a462fb7b60e01b815291926001600160a01b03169163a462fb7b91610ae99160040190815260200190565b602060405180830381865afa158015610b06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2a9190611e1b565b90506001819003610bbd576000828152600860209081526040808320805460ff191660011790556005825291829020548251838152601693810193909352751c9bdbdd081a185cc81899595b881858d8d95c1d195960521b6060840152908201527f774525447b3c80128a3cd56e15f1bef3defbb37b52d174bf0268d9a39f4f3576906080015b60405180910390a15050565b6000828152600860209081526040808320805460ff191690556005825291829020548251838152601a938101939093527f726f6f7420686173206e6f74206265656e2061636365707465640000000000006060840152908201527f774525447b3c80128a3cd56e15f1bef3defbb37b52d174bf0268d9a39f4f357690608001610bb1565b600360205260009081526040902080546104aa90611d09565b6000610c64611494565b6060600042905080600786604051610c7c9190611dff565b908152604080516020928190038301902092909255600083815260068252919091208551610cac928701906117b2565b506000818152600360205260409020610cc58682611ec8565b506000818152600460205260408120805460ff191660011790555b8451811015610d395782858281518110610cfc57610cfc611e34565b6020026020010151604051602001610d15929190611f88565b60405160208183030381529060405292508080610d3190611e60565b915050610ce0565b506000610d458261124f565b8387604051602001610d5993929190611fd3565b60408051808303601f1901815290829052600a546001546000805463762c38fd60e01b86529395506001600160a01b039283169463762c38fd94610db894929388931691600160a01b90910463ffffffff169084908190600401612087565b6020604051808303816000875af1158015610dd7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dfb9190611e1b565b60008381526005602052604090819020829055517f0abbd316cde29430a32db2af046d35e125b792bc6dd0ef90f92e143b52ec803091610e5a9160408082526003908201526279657360e81b6060820152602081019190915260800190565b60405180910390a150949350505050565b60008281526008602052604081205460ff1615159003610e8e57610e8e826109e6565b600082815260066020908152604080832080548251818502810185019093528083529192909190849084015b82821015610f66578382906000526020600020018054610ed990611d09565b80601f0160208091040260200160405190810160405280929190818152602001828054610f0590611d09565b8015610f525780601f10610f2757610100808354040283529160200191610f52565b820191906000526020600020905b815481529060010190602001808311610f3557829003601f168201915b505050505081526020019060010190610eba565b5050505090506000600360008581526020019081526020016000208054610f8c90611d09565b80601f0160208091040260200160405190810160405280929190818152602001828054610fb890611d09565b80156110055780601f10610fda57610100808354040283529160200191611005565b820191906000526020600020905b815481529060010190602001808311610fe857829003601f168201915b5050505050905060006110183387610428565b600086815260096020908152604080832033845290915290205490915060ff161561107b5760405162461bcd60e51b815260206004820152601360248201527210d85b1b195c88185b1c9958591e481c185a59606a1b6044820152606401610a40565b6000611089838386886107f4565b9050806110e45760405162461bcd60e51b815260206004820152602360248201527f43616c6c657220646f6573206e6f74206d61746368206c65616620706f73697460448201526234b7b760e91b6064820152608401610a40565b600b5460405163a9059cbb60e01b8152336004820152602481018990526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015611135573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061115991906120d2565b5060008681526009602090815260408083203380855290835292819020805460ff1916600117905580519283529082018990527fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a910160405180910390a150505050505050565b6111c8611494565b6001600160a01b03811661122d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610a40565b611236816114ee565b50565b60606104976001600160a01b038316601461153e565b6060600061125c836116da565b600101905060008167ffffffffffffffff81111561127c5761127c61195d565b6040519080825280601f01601f1916602001820160405280156112a6576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846112b057509392505050565b7aff00000000000000ff00000000000000ff00000000000000ff00006bffffffff0000000000000000604083901c90811663ffffffff60c01b84161760201c63ffffffff60601b919091166001600160e01b031984161717601081901c9182167eff00000000000000ff00000000000000ff00000000000000ff000000000000821617600890811c7bff00000000000000ff00000000000000ff00000000000000ff000000939093167fff00000000000000ff00000000000000ff00000000000000ff000000000000009290921691909117919091179081901c7e0f000f000f000f000f000f000f000f000f000f000f000f000f000f000f000f167f0f000f000f000f000f000f000f000f000f000f000f000f000f000f000f000f00600492831c161790611430827f06060606060606060606060606060606060606060606060606060606060606066120f4565b901c7f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f1660276114609190612107565b61148a827f30303030303030303030303030303030303030303030303030303030303030306120f4565b61049791906120f4565b6000546001600160a01b031633146107f25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610a40565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6060600061154d836002612107565b6115589060026120f4565b67ffffffffffffffff8111156115705761157061195d565b6040519080825280601f01601f19166020018201604052801561159a576020820181803683370190505b509050600360fc1b816000815181106115b5576115b5611e34565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106115e4576115e4611e34565b60200101906001600160f81b031916908160001a9053506000611608846002612107565b6116139060016120f4565b90505b600181111561168b576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061164757611647611e34565b1a60f81b82828151811061165d5761165d611e34565b60200101906001600160f81b031916908160001a90535060049490941c936116848161211e565b9050611616565b5083156106415760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610a40565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106117195772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611745576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061176357662386f26fc10000830492506010015b6305f5e100831061177b576305f5e100830492506008015b612710831061178f57612710830492506004015b606483106117a1576064830492506002015b600a83106104975760010192915050565b8280548282559060005260206000209081019282156117f8579160200282015b828111156117f857825182906117e89082611ec8565b50916020019190600101906117d2565b50611804929150611808565b5090565b8082111561180457600061181c8282611825565b50600101611808565b50805461183190611d09565b6000825580601f10611841575050565b601f01602090049060005260206000209081019061123691905b80821115611804576000815560010161185b565b80356001600160a01b038116811461188657600080fd5b919050565b6000806040838503121561189e57600080fd5b823591506118ae6020840161186f565b90509250929050565b600080604083850312156118ca57600080fd5b6118d38361186f565b946020939093013593505050565b60005b838110156118fc5781810151838201526020016118e4565b50506000910152565b6000815180845261191d8160208601602086016118e1565b601f01601f19169290920160200192915050565b6020815260006106416020830184611905565b60006020828403121561195657600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561199c5761199c61195d565b604052919050565b600082601f8301126119b557600080fd5b813567ffffffffffffffff8111156119cf576119cf61195d565b6119e2601f8201601f1916602001611973565b8181528460208386010111156119f757600080fd5b816020850160208301376000918101602001919091529392505050565b60008060408385031215611a2757600080fd5b823567ffffffffffffffff80821115611a3f57600080fd5b611a4b868387016119a4565b93506020850135915080821115611a6157600080fd5b50611a6e858286016119a4565b9150509250929050565b60008060408385031215611a8b57600080fd5b50508035926020909101359150565b600060208284031215611aac57600080fd5b813567ffffffffffffffff811115611ac357600080fd5b611acf848285016119a4565b949350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611b2c57603f19888603018452611b1a858351611905565b94509285019290850190600101611afe565b5092979650505050505050565b600082601f830112611b4a57600080fd5b8135602067ffffffffffffffff80831115611b6757611b6761195d565b8260051b611b76838201611973565b9384528581018301938381019088861115611b9057600080fd5b84880192505b85831015611bcc57823584811115611bae5760008081fd5b611bbc8a87838c01016119a4565b8352509184019190840190611b96565b98975050505050505050565b60008060008060808587031215611bee57600080fd5b843567ffffffffffffffff80821115611c0657600080fd5b611c12888389016119a4565b95506020870135915080821115611c2857600080fd5b611c34888389016119a4565b94506040870135915080821115611c4a57600080fd5b50611c5787828801611b39565b949793965093946060013593505050565b60008060408385031215611c7b57600080fd5b823567ffffffffffffffff80821115611c9357600080fd5b611c9f868387016119a4565b93506020850135915080821115611cb557600080fd5b50611a6e85828601611b39565b600080600060608486031215611cd757600080fd5b505081359360208301359350604090920135919050565b600060208284031215611d0057600080fd5b6106418261186f565b600181811c90821680611d1d57607f821691505b602082108103611d3d57634e487b7160e01b600052602260045260246000fd5b50919050565b600083516020611d5682858389016118e1565b818401915060008554611d6881611d09565b60018281168015611d805760018114611d9557611dc1565b60ff1984168752821515830287019450611dc1565b896000528560002060005b84811015611db957815489820152908301908701611da0565b505082870194505b50929998505050505050505050565b60008351611de28184602088016118e1565b835190830190611df68183602088016118e1565b01949350505050565b60008251611e118184602087016118e1565b9190910192915050565b600060208284031215611e2d57600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611e7257611e72611e4a565b5060010190565b601f821115611ec357600081815260208120601f850160051c81016020861015611ea05750805b601f850160051c820191505b81811015611ebf57828155600101611eac565b5050505b505050565b815167ffffffffffffffff811115611ee257611ee261195d565b611ef681611ef08454611d09565b84611e79565b602080601f831160018114611f2b5760008415611f135750858301515b600019600386901b1c1916600185901b178555611ebf565b600085815260208120601f198616915b82811015611f5a57888601518255948401946001909101908401611f3b565b5085821015611f785787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008351611f9a8184602088016118e1565b601160f91b9083019081528351611fb88160018401602088016118e1565b61088b60f21b60019290910191820152600301949350505050565b7f546865204d65726b6c65207472656520666f722065666665637469766520646181526203a32960ed1b6020820152600084516120178160238501602089016118e1565b64206973205b60d81b602391840191820152845161203c8160288401602089016118e1565b7f5d616e6420746865206d65726b6c6520726f6f7420697320000000000000000060289290910191820152835161207a8160408401602088016118e1565b0160400195945050505050565b86815260c0602082015260006120a060c0830188611905565b6001600160a01b039690961660408301525063ffffffff938416606082015291909216608082015260a0015292915050565b6000602082840312156120e457600080fd5b8151801515811461064157600080fd5b8082018082111561049757610497611e4a565b808202811582820484141761049757610497611e4a565b60008161212d5761212d611e4a565b50600019019056fea2646970667358221220639f5f5a37e02616911fb90f8b7093045b07af5aac92dc20de617cf7faf410ba64736f6c63430008110033",
    "sourceMap": "435:37:29:-:0;;;-1:-1:-1;;;;435:37:29;-1:-1:-1;;;435:37:29;;;-1:-1:-1;487:70:29;;-1:-1:-1;;;;;;487:70:29;;;572:25;363:6911;572:25;363:6911;572:25;;;-1:-1:-1;;;572:25:29;;;;;;;;:::i;:::-;;1382:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:16;719:10:20;936:18:16;:32::i;:::-;1435:11:29;:35;;-1:-1:-1;;;;;1435:35:29;;;-1:-1:-1;;;;;;1435:35:29;;;;;;;1478:4;:20;;;;;;;;;;;363:6911;;2433:187:16;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:16;;;-1:-1:-1;;;;;;2541:17:16;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:127:37:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:37;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:37;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:37;;;2580:26;2531:89;-1:-1:-1;;1335:1:37;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:37;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:37;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:37;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:37:o;2735:177::-;2814:13;;-1:-1:-1;;;;;2856:31:37;;2846:42;;2836:70;;2902:1;2899;2892:12;2836:70;2735:177;;;:::o;2917:293::-;2996:6;3004;3057:2;3045:9;3036:7;3032:23;3028:32;3025:52;;;3073:1;3070;3063:12;3025:52;3096:40;3126:9;3096:40;:::i;:::-;3086:50;;3155:49;3200:2;3189:9;3185:18;3155:49;:::i;:::-;3145:59;;2917:293;;;;;:::o;:::-;363:6911:29;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101735760003560e01c8063715018a6116100de578063bffd889311610097578063e20dee5011610071578063e20dee50146103ab578063efa9a9be146103d6578063f2fde38b146103e9578063f3f480d9146103fc57600080fd5b8063bffd889314610362578063cd09abec14610385578063e1964a691461039857600080fd5b8063715018a6146102db57806371c0d915146102e557806376a5cef3146103085780637d77869e1461032b5780638da5cb5b1461033e578063ad891ad41461034f57600080fd5b806349e894d81161013057806349e894d8146102375780634d0676d81461024a578063561444eb1461026a578063581d8f361461027d578063657d7ab8146102905780636cc6cde1146102b057600080fd5b806314a0db9b146101785780631e131bf2146101bb57806327af9e38146101db578063291637a2146101e35780633127718d146101f65780633c64678714610209575b600080fd5b6101a661018636600461188b565b600960209081526000928352604080842090915290825290205460ff1681565b60405190151581526020015b60405180910390f35b6101ce6101c93660046118b7565b610428565b6040516101b29190611931565b6101ce61049d565b6101ce6101f1366004611944565b61052b565b6101ce610204366004611a14565b6105cd565b610229610217366004611944565b60009081526005602052604090205490565b6040519081526020016101b2565b6101ce610245366004611944565b610648565b610229610258366004611944565b60056020526000908152604090205481565b6101ce610278366004611a78565b610694565b61022961028b366004611a9a565b6106cc565b6102a361029e366004611944565b6106f4565b6040516101b29190611ad7565b6001546102c3906001600160a01b031681565b6040516001600160a01b0390911681526020016101b2565b6102e36107e0565b005b6101a66102f3366004611944565b60009081526008602052604090205460ff1690565b6101a6610316366004611944565b60046020526000908152604090205460ff1681565b6101a6610339366004611bd8565b6107f4565b6000546001600160a01b03166102c3565b6102e361035d366004611944565b6109e6565b6101a6610370366004611944565b60086020526000908152604090205460ff1681565b6101ce610393366004611944565b610c41565b6102296103a6366004611c68565b610c5a565b6102296103b9366004611a9a565b805160208183018101805160078252928201919093012091525481565b6102e36103e4366004611cc2565b610e6b565b6102e36103f7366004611cee565b6111c0565b60005461041390600160a01b900463ffffffff1681565b60405163ffffffff90911681526020016101b2565b6060600061043533611239565b905060006104428461124f565b9050600082600260405160200161045a929190611d43565b604051602081830303815290604052905060008183604051602001610480929190611dd0565b60408051601f198184030181529190529450505050505b92915050565b600280546104aa90611d09565b80601f01602080910402602001604051908101604052809291908181526020018280546104d690611d09565b80156105235780601f106104f857610100808354040283529160200191610523565b820191906000526020600020905b81548152906001019060200180831161050657829003601f168201915b505050505081565b600081815260036020526040902080546060919061054890611d09565b80601f016020809104026020016040519081016040528092919081815260200182805461057490611d09565b80156105c15780601f10610596576101008083540402835291602001916105c1565b820191906000526020600020905b8154815290600101906020018083116105a457829003601f168201915b50505050509050919050565b6060610641600284846040516020016105e7929190611dd0565b60408051601f198184030181529082905261060191611dff565b602060405180830381855afa15801561061e573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906102459190611e1b565b9392505050565b6060610653826112e2565b610660608084901b6112e2565b60405161060f60f31b6020820152602281019290925260428201526062016040516020818303038152906040529050919050565b600660205281600052604060002081815481106106b057600080fd5b906000526020600020016000915091505080546104aa90611d09565b60006007826040516106de9190611dff565b9081526020016040518091039020549050919050565b606060066000838152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156107d557838290600052602060002001805461074890611d09565b80601f016020809104026020016040519081016040528092919081815260200182805461077490611d09565b80156107c15780601f10610796576101008083540402835291602001916107c1565b820191906000526020600020905b8154815290600101906020018083116107a457829003601f168201915b505050505081526020019060010190610729565b505050509050919050565b6107e8611494565b6107f260006114ee565b565b60008061082a604051806020016040528060008152508560008151811061081d5761081d611e34565b60200260200101516105cd565b905060005b845181101561090057600061085f6040518060200160405280600081525087848151811061081d5761081d611e34565b9050600061087c60405180602001604052806000815250896105cd565b9050858314801561088b575082155b15610898578093506108eb565b826000036108cd576108c6604051806020016040528060008152508860008151811061081d5761081d611e34565b93506108eb565b8583036108de576108c684826105cd565b6108e884836105cd565b93505b505080806108f890611e60565b91505061082f565b506002866040516020016109149190611dff565b60408051601f198184030181529082905261092e91611dff565b602060405180830381855afa15801561094b573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061096e9190611e1b565b6002826040516020016109819190611dff565b60408051601f198184030181529082905261099b91611dff565b602060405180830381855afa1580156109b8573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906109db9190611e1b565b149695505050505050565b60008181526004602052604090205460ff16610a495760405162461bcd60e51b815260206004820152601c60248201527f4e6f20526f6f742053746f72656420666f72207468617420646174650000000060448201526064015b60405180910390fd5b60008181526008602052604090205460ff1615610aa85760405162461bcd60e51b815260206004820152601760248201527f416e7377657220686173206265656e20636865636b65640000000000000000006044820152606401610a40565b600a5460008281526005602052604080822054905163a462fb7b60e01b815291926001600160a01b03169163a462fb7b91610ae99160040190815260200190565b602060405180830381865afa158015610b06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2a9190611e1b565b90506001819003610bbd576000828152600860209081526040808320805460ff191660011790556005825291829020548251838152601693810193909352751c9bdbdd081a185cc81899595b881858d8d95c1d195960521b6060840152908201527f774525447b3c80128a3cd56e15f1bef3defbb37b52d174bf0268d9a39f4f3576906080015b60405180910390a15050565b6000828152600860209081526040808320805460ff191690556005825291829020548251838152601a938101939093527f726f6f7420686173206e6f74206265656e2061636365707465640000000000006060840152908201527f774525447b3c80128a3cd56e15f1bef3defbb37b52d174bf0268d9a39f4f357690608001610bb1565b600360205260009081526040902080546104aa90611d09565b6000610c64611494565b6060600042905080600786604051610c7c9190611dff565b908152604080516020928190038301902092909255600083815260068252919091208551610cac928701906117b2565b506000818152600360205260409020610cc58682611ec8565b506000818152600460205260408120805460ff191660011790555b8451811015610d395782858281518110610cfc57610cfc611e34565b6020026020010151604051602001610d15929190611f88565b60405160208183030381529060405292508080610d3190611e60565b915050610ce0565b506000610d458261124f565b8387604051602001610d5993929190611fd3565b60408051808303601f1901815290829052600a546001546000805463762c38fd60e01b86529395506001600160a01b039283169463762c38fd94610db894929388931691600160a01b90910463ffffffff169084908190600401612087565b6020604051808303816000875af1158015610dd7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dfb9190611e1b565b60008381526005602052604090819020829055517f0abbd316cde29430a32db2af046d35e125b792bc6dd0ef90f92e143b52ec803091610e5a9160408082526003908201526279657360e81b6060820152602081019190915260800190565b60405180910390a150949350505050565b60008281526008602052604081205460ff1615159003610e8e57610e8e826109e6565b600082815260066020908152604080832080548251818502810185019093528083529192909190849084015b82821015610f66578382906000526020600020018054610ed990611d09565b80601f0160208091040260200160405190810160405280929190818152602001828054610f0590611d09565b8015610f525780601f10610f2757610100808354040283529160200191610f52565b820191906000526020600020905b815481529060010190602001808311610f3557829003601f168201915b505050505081526020019060010190610eba565b5050505090506000600360008581526020019081526020016000208054610f8c90611d09565b80601f0160208091040260200160405190810160405280929190818152602001828054610fb890611d09565b80156110055780601f10610fda57610100808354040283529160200191611005565b820191906000526020600020905b815481529060010190602001808311610fe857829003601f168201915b5050505050905060006110183387610428565b600086815260096020908152604080832033845290915290205490915060ff161561107b5760405162461bcd60e51b815260206004820152601360248201527210d85b1b195c88185b1c9958591e481c185a59606a1b6044820152606401610a40565b6000611089838386886107f4565b9050806110e45760405162461bcd60e51b815260206004820152602360248201527f43616c6c657220646f6573206e6f74206d61746368206c65616620706f73697460448201526234b7b760e91b6064820152608401610a40565b600b5460405163a9059cbb60e01b8152336004820152602481018990526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015611135573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061115991906120d2565b5060008681526009602090815260408083203380855290835292819020805460ff1916600117905580519283529082018990527fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a910160405180910390a150505050505050565b6111c8611494565b6001600160a01b03811661122d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610a40565b611236816114ee565b50565b60606104976001600160a01b038316601461153e565b6060600061125c836116da565b600101905060008167ffffffffffffffff81111561127c5761127c61195d565b6040519080825280601f01601f1916602001820160405280156112a6576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846112b057509392505050565b7aff00000000000000ff00000000000000ff00000000000000ff00006bffffffff0000000000000000604083901c90811663ffffffff60c01b84161760201c63ffffffff60601b919091166001600160e01b031984161717601081901c9182167eff00000000000000ff00000000000000ff00000000000000ff000000000000821617600890811c7bff00000000000000ff00000000000000ff00000000000000ff000000939093167fff00000000000000ff00000000000000ff00000000000000ff000000000000009290921691909117919091179081901c7e0f000f000f000f000f000f000f000f000f000f000f000f000f000f000f000f167f0f000f000f000f000f000f000f000f000f000f000f000f000f000f000f000f00600492831c161790611430827f06060606060606060606060606060606060606060606060606060606060606066120f4565b901c7f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f1660276114609190612107565b61148a827f30303030303030303030303030303030303030303030303030303030303030306120f4565b61049791906120f4565b6000546001600160a01b031633146107f25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610a40565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6060600061154d836002612107565b6115589060026120f4565b67ffffffffffffffff8111156115705761157061195d565b6040519080825280601f01601f19166020018201604052801561159a576020820181803683370190505b509050600360fc1b816000815181106115b5576115b5611e34565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106115e4576115e4611e34565b60200101906001600160f81b031916908160001a9053506000611608846002612107565b6116139060016120f4565b90505b600181111561168b576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061164757611647611e34565b1a60f81b82828151811061165d5761165d611e34565b60200101906001600160f81b031916908160001a90535060049490941c936116848161211e565b9050611616565b5083156106415760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610a40565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106117195772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611745576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061176357662386f26fc10000830492506010015b6305f5e100831061177b576305f5e100830492506008015b612710831061178f57612710830492506004015b606483106117a1576064830492506002015b600a83106104975760010192915050565b8280548282559060005260206000209081019282156117f8579160200282015b828111156117f857825182906117e89082611ec8565b50916020019190600101906117d2565b50611804929150611808565b5090565b8082111561180457600061181c8282611825565b50600101611808565b50805461183190611d09565b6000825580601f10611841575050565b601f01602090049060005260206000209081019061123691905b80821115611804576000815560010161185b565b80356001600160a01b038116811461188657600080fd5b919050565b6000806040838503121561189e57600080fd5b823591506118ae6020840161186f565b90509250929050565b600080604083850312156118ca57600080fd5b6118d38361186f565b946020939093013593505050565b60005b838110156118fc5781810151838201526020016118e4565b50506000910152565b6000815180845261191d8160208601602086016118e1565b601f01601f19169290920160200192915050565b6020815260006106416020830184611905565b60006020828403121561195657600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561199c5761199c61195d565b604052919050565b600082601f8301126119b557600080fd5b813567ffffffffffffffff8111156119cf576119cf61195d565b6119e2601f8201601f1916602001611973565b8181528460208386010111156119f757600080fd5b816020850160208301376000918101602001919091529392505050565b60008060408385031215611a2757600080fd5b823567ffffffffffffffff80821115611a3f57600080fd5b611a4b868387016119a4565b93506020850135915080821115611a6157600080fd5b50611a6e858286016119a4565b9150509250929050565b60008060408385031215611a8b57600080fd5b50508035926020909101359150565b600060208284031215611aac57600080fd5b813567ffffffffffffffff811115611ac357600080fd5b611acf848285016119a4565b949350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611b2c57603f19888603018452611b1a858351611905565b94509285019290850190600101611afe565b5092979650505050505050565b600082601f830112611b4a57600080fd5b8135602067ffffffffffffffff80831115611b6757611b6761195d565b8260051b611b76838201611973565b9384528581018301938381019088861115611b9057600080fd5b84880192505b85831015611bcc57823584811115611bae5760008081fd5b611bbc8a87838c01016119a4565b8352509184019190840190611b96565b98975050505050505050565b60008060008060808587031215611bee57600080fd5b843567ffffffffffffffff80821115611c0657600080fd5b611c12888389016119a4565b95506020870135915080821115611c2857600080fd5b611c34888389016119a4565b94506040870135915080821115611c4a57600080fd5b50611c5787828801611b39565b949793965093946060013593505050565b60008060408385031215611c7b57600080fd5b823567ffffffffffffffff80821115611c9357600080fd5b611c9f868387016119a4565b93506020850135915080821115611cb557600080fd5b50611a6e85828601611b39565b600080600060608486031215611cd757600080fd5b505081359360208301359350604090920135919050565b600060208284031215611d0057600080fd5b6106418261186f565b600181811c90821680611d1d57607f821691505b602082108103611d3d57634e487b7160e01b600052602260045260246000fd5b50919050565b600083516020611d5682858389016118e1565b818401915060008554611d6881611d09565b60018281168015611d805760018114611d9557611dc1565b60ff1984168752821515830287019450611dc1565b896000528560002060005b84811015611db957815489820152908301908701611da0565b505082870194505b50929998505050505050505050565b60008351611de28184602088016118e1565b835190830190611df68183602088016118e1565b01949350505050565b60008251611e118184602087016118e1565b9190910192915050565b600060208284031215611e2d57600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611e7257611e72611e4a565b5060010190565b601f821115611ec357600081815260208120601f850160051c81016020861015611ea05750805b601f850160051c820191505b81811015611ebf57828155600101611eac565b5050505b505050565b815167ffffffffffffffff811115611ee257611ee261195d565b611ef681611ef08454611d09565b84611e79565b602080601f831160018114611f2b5760008415611f135750858301515b600019600386901b1c1916600185901b178555611ebf565b600085815260208120601f198616915b82811015611f5a57888601518255948401946001909101908401611f3b565b5085821015611f785787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008351611f9a8184602088016118e1565b601160f91b9083019081528351611fb88160018401602088016118e1565b61088b60f21b60019290910191820152600301949350505050565b7f546865204d65726b6c65207472656520666f722065666665637469766520646181526203a32960ed1b6020820152600084516120178160238501602089016118e1565b64206973205b60d81b602391840191820152845161203c8160288401602089016118e1565b7f5d616e6420746865206d65726b6c6520726f6f7420697320000000000000000060289290910191820152835161207a8160408401602088016118e1565b0160400195945050505050565b86815260c0602082015260006120a060c0830188611905565b6001600160a01b039690961660408301525063ffffffff938416606082015291909216608082015260a0015292915050565b6000602082840312156120e457600080fd5b8151801515811461064157600080fd5b8082018082111561049757610497611e4a565b808202811582820484141761049757610497611e4a565b60008161212d5761212d611e4a565b50600019019056fea2646970667358221220639f5f5a37e02616911fb90f8b7093045b07af5aac92dc20de617cf7faf410ba64736f6c63430008110033",
    "sourceMap": "363:6911:29:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;905:66;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;616:14:37;;609:22;591:41;;579:2;564:18;905:66:29;;;;;;;;5389:387;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;572:25::-;;;:::i;6255:131::-;;;;;;:::i;:::-;;:::i;2200:170:26:-;;;;;;:::i;:::-;;:::i;6573:130:29:-;;;;;;:::i;:::-;6639:7;6663:33;;;:17;:33;;;;;;;6573:130;;;;3485:25:37;;;3473:2;3458:18;6573:130:29;3339:177:37;1706:180:26;;;;;;:::i;:::-;;:::i;696:49:29:-;;;;;;:::i;:::-;;;;;;;;;;;;;;751:45;;;;;;:::i;:::-;;:::i;6867:118::-;;;;;;:::i;:::-;;:::i;5949:133::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;487:70::-;;;;;-1:-1:-1;;;;;487:70:29;;;;;;-1:-1:-1;;;;;5440:32:37;;;5422:51;;5410:2;5395:18;487:70:29;5276:203:37;1831:101:16;;;:::i;:::-;;7142:130:29;;;;;;:::i;:::-;7213:4;7234:31;;;:15;:31;;;;;;;;;7142:130;651:39;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2807:875:26;;;;;;:::i;:::-;;:::i;1201:85:16:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:16;1201:85;;3231:724:29;;;;;;:::i;:::-;;:::i;855:44::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;603:42;;;;;;:::i;:::-;;:::i;1788:1232::-;;;;;;:::i;:::-;;:::i;802:47::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;4404:737;;;;;;:::i;:::-;;:::i;2081:198:16:-;;;;;;:::i;:::-;;:::i;435:37:29:-;;;;;-1:-1:-1;;;435:37:29;;;;;;;;;8553:10:37;8541:23;;;8523:42;;8511:2;8496:18;435:37:29;8379:192:37;5389:387:29;5468:13;5491:27;5521:31;5541:10;5521:19;:31::i;:::-;5491:61;;5560:26;5589:25;5606:7;5589:16;:25::i;:::-;5560:54;;5622:23;5662:13;5677:5;5648:35;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5622:61;;5691:18;5726:9;5737:12;5712:38;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5712:38:29;;;;;;;;;;-1:-1:-1;;;;;5389:387:29;;;;;:::o;572:25::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6255:131::-;6352:27;;;;:11;:27;;;;;6345:34;;6322:13;;6352:27;6345:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6255:131;;;:::o;2200:170:26:-;2289:13;2316:49;2322:42;2346:7;2355;2329:34;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2329:34:26;;;;;;;;;;2322:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2316:49::-;2309:56;2200:170;-1:-1:-1;;;2200:170:26:o;1706:180::-;1758:13;1820:25;1838:5;1820:7;:25::i;:::-;1847:32;1874:3;1865:5;:12;;1847:7;:32::i;:::-;1796:84;;-1:-1:-1;;;1796:84:26;;;11383:17:37;11416:11;;;11409:27;;;;11452:12;;;11445:28;11489:12;;1796:84:26;;;;;;;;;;;;1781:100;;1706:180;;;:::o;751:45:29:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;6867:118::-;6934:7;6958:13;6972:5;6958:20;;;;;;:::i;:::-;;;;;;;;;;;;;;6951:27;;6867:118;;;:::o;5949:133::-;6016:15;6048:11;:27;6060:14;6048:27;;;;;;;;;;;6041:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5949:133;;;:::o;1831:101:16:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;2807:875:26:-;2951:4;3024:26;3053:27;;;;;;;;;;;;;3070:6;3077:1;3070:9;;;;;;;;:::i;:::-;;;;;;;3053:12;:27::i;:::-;3024:56;;3092:9;3087:508;3111:6;:13;3107:1;:17;3087:508;;;3140:26;3169:27;;;;;;;;;;;;;3186:6;3193:1;3186:9;;;;;;;;:::i;3169:27::-;3140:56;;3204:24;3231:22;;;;;;;;;;;;;3248:4;3231:12;:22::i;:::-;3204:49;;3271:8;3266:1;:13;:23;;;;-1:-1:-1;3283:6:26;;3266:23;3262:327;;;3317:10;3302:25;;3262:327;;;3344:1;3349;3344:6;3341:248;;3377:27;;;;;;;;;;;;;3394:6;3401:1;3394:9;;;;;;;;:::i;3377:27::-;3362:42;;3341:248;;;3427:8;3422:1;:13;3419:170;;3462:38;3475:12;3489:10;3462:12;:38::i;3419:170::-;3540:40;3553:12;3567;3540;:40::i;:::-;3525:55;;3419:170;3131:464;;3126:3;;;;;:::i;:::-;;;;3087:508;;;;3647:30;3671:4;3654:22;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3654:22:26;;;;;;;;;;3647:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3605:38;3629:12;3612:30;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3612:30:26;;;;;;;;;;3605:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:72;;2807:875;-1:-1:-1;;;;;;2807:875:26:o;3231:724:29:-;3296:26;;;;:10;:26;;;;;;;;3288:67;;;;-1:-1:-1;;;3288:67:29;;12412:2:37;3288:67:29;;;12394:21:37;12451:2;12431:18;;;12424:30;12490;12470:18;;;12463:58;12538:18;;3288:67:29;;;;;;;;;3371:31;;;;:15;:31;;;;;;;;:40;3363:76;;;;-1:-1:-1;;;3363:76:29;;12769:2:37;3363:76:29;;;12751:21:37;12808:2;12788:18;;;12781:30;12847:25;12827:18;;;12820:53;12890:18;;3363:76:29;12567:347:37;3363:76:29;3466:11;;3449:14;3493:33;;;:17;:33;;;;;;;3466:61;;-1:-1:-1;;;3466:61:29;;3449:14;;-1:-1:-1;;;;;3466:11:29;;:26;;:61;;;;3485:25:37;;;3473:2;3458:18;;3339:177;3466:61:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3449:78;-1:-1:-1;3551:66:29;3541:76;;;3537:410;;3632:31;;;;:15;:31;;;;;;;;:38;;-1:-1:-1;;3632:38:29;3666:4;3632:38;;;3728:17;:33;;;;;;;3689:73;;13131:21:37;;;13188:2;13168:18;;;13161:30;;;;-1:-1:-1;;;13222:2:37;13207:18;;13200:52;13304:20;;;13297:36;3689:73:29;;13284:3:37;13269:19;3689:73:29;;;;;;;;3280:675;3231:724;:::o;3537:410::-;3835:5;3801:31;;;:15;:31;;;;;;;;:39;;-1:-1:-1;;3801:39:29;;;3902:17;:33;;;;;;;3859:77;;13556:21:37;;;13613:2;13593:18;;;13586:30;;;;13652:28;13647:2;13632:18;;13625:56;13733:20;;;13726:36;3859:77:29;;13713:3:37;13698:19;3859:77:29;13344:424:37;603:42:29;;;;;;;;;;;;;;;;:::i;1788:1232::-;1891:7;1094:13:16;:11;:13::i;:::-;1945:19:29::1;1974:21;2006:15;1974:48;;2061:13;2032;2046:11;2032:26;;;;;;:::i;:::-;::::0;;;::::1;::::0;;::::1;::::0;;;;;;;;:42;;;;2084:26:::1;::::0;;;:11:::1;:26:::0;;;;;;:38;;::::1;::::0;;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2189:26:29::1;::::0;;;:11:::1;:26;::::0;;;;:40:::1;2218:11:::0;2189:26;:40:::1;:::i;:::-;-1:-1:-1::0;2239:25:29::1;::::0;;;:10:::1;:25;::::0;;;;:32;;-1:-1:-1;;2239:32:29::1;2267:4;2239:32;::::0;;2281:161:::1;2305:9;:16;2301:1;:20;2281:161;;;2369:6;2382:9;2392:1;2382:12;;;;;;;;:::i;:::-;;;;;;;2352:50;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2342:61;;2323:3;;;;;:::i;:::-;;;;2281:161;;;;2452:22;2561:31;2578:13;2561:16;:31::i;:::-;2623:6;2679:11;2495:205;;;;;;;;;;:::i;:::-;;::::0;;;;::::1;-1:-1:-1::0;;2495:205:29;;;;;;;2753:11:::1;::::0;;2827:10;2753:11:::1;2851:15:::0;;-1:-1:-1;;;2753:157:29;;2495:205;;-1:-1:-1;;;;;;2753:11:29;;::::1;::::0;:23:::1;::::0;:157:::1;::::0;:11;;2495:205;;2827:10:::1;::::0;-1:-1:-1;;;2851:15:29;;::::1;;;::::0;2753:11;;;;:157:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2718:32;::::0;;;:17:::1;:32;::::0;;;;;;:192;;;2925:58;::::1;::::0;::::1;::::0;18782:2:37;18764:21;;;18821:1;18801:18;;;18794:29;-1:-1:-1;;;18854:2:37;18839:18;;18832:33;18932:4;18917:20;;18910:36;;;;18897:3;18882:19;;18552:400;2925:58:29::1;;;;;;;;-1:-1:-1::0;3000:13:29;1788:1232;-1:-1:-1;;;;1788:1232:29:o;4404:737::-;4501:31;;;;:15;:31;;;;;;;;:40;;;;4498:91;;4553:27;4565:14;4553:11;:27::i;:::-;4596:20;4619:27;;;:11;:27;;;;;;;;4596:50;;;;;;;;;;;;;;;;;;;4619:27;;4596:50;:20;;:50;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4654:18;4675:11;:27;4687:14;4675:27;;;;;;;;;;;4654:48;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4710:18;4731:40;4749:10;4761:9;4731:17;:40::i;:::-;4787:33;;;;:17;:33;;;;;;;;4821:10;4787:45;;;;;;;;4710:61;;-1:-1:-1;4787:45:29;;:54;4779:87;;;;-1:-1:-1;;;4779:87:29;;19159:2:37;4779:87:29;;;19141:21:37;19198:2;19178:18;;;19171:30;-1:-1:-1;;;19217:18:37;;;19210:49;19276:18;;4779:87:29;18957:343:37;4779:87:29;4874:12;4889:35;4896:4;4902;4908;4914:9;4889:6;:35::i;:::-;4874:50;;4940:7;4932:55;;;;-1:-1:-1;;;4932:55:29;;19507:2:37;4932:55:29;;;19489:21:37;19546:2;19526:18;;;19519:30;19585:34;19565:18;;;19558:62;-1:-1:-1;;;19636:18:37;;;19629:33;19679:19;;4932:55:29;19305:399:37;4932:55:29;4995:4;;:36;;-1:-1:-1;;;4995:36:29;;5009:10;4995:36;;;19883:51:37;19950:18;;;19943:34;;;-1:-1:-1;;;;;4995:4:29;;;;:13;;19856:18:37;;4995:36:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5039:33:29;;;;:17;:33;;;;;;;;5073:10;5039:45;;;;;;;;;;:52;;-1:-1:-1;;5039:52:29;5087:4;5039:52;;;5104:30;;19883:51:37;;;19950:18;;;19943:34;;;5104:30:29;;19856:18:37;5104:30:29;;;;;;;4490:651;;;;4404:737;;;:::o;2081:198:16:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:16;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:16;;20472:2:37;2161:73:16::1;::::0;::::1;20454:21:37::0;20511:2;20491:18;;;20484:30;20550:34;20530:18;;;20523:62;-1:-1:-1;;;20601:18:37;;;20594:36;20647:19;;2161:73:16::1;20270:402:37::0;2161:73:16::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;2102:149:21:-;2160:13;2192:52;-1:-1:-1;;;;;2204:22:21;;311:2;2192:11;:52::i;415:696::-;471:13;520:14;537:17;548:5;537:10;:17::i;:::-;557:1;537:21;520:38;;572:20;606:6;595:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;595:18:21;-1:-1:-1;572:41:21;-1:-1:-1;733:28:21;;;749:2;733:28;788:280;-1:-1:-1;;819:5:21;-1:-1:-1;;;953:2:21;942:14;;937:30;819:5;924:44;1012:2;1003:11;;;-1:-1:-1;1032:21:21;788:280;1032:21;-1:-1:-1;1088:6:21;415:696;-1:-1:-1;;;415:696:21:o;193:1370:26:-;961:75;581;471:2;381:92;;;581:75;;;-1:-1:-1;;;581:75:26;;;661:2;580:83;-1:-1:-1;;;490:75:26;;;;-1:-1:-1;;;;;;490:75:26;;;:173;851:2;770:83;;;961:75;;;;;;;1041:1;960:82;;;870:75;;;;;;;;;;;;;;:172;;;;1156:82;;;;;;1166:66;1140:1;1059:82;;;;:179;;1379:85;1059:179;1398:66;1379:85;:::i;:::-;:90;;1485:66;1379:172;1555:2;1378:179;;;;:::i;:::-;1264:98;1355:6;1264:66;:98;:::i;:::-;:293;;;;:::i;1359:130:16:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:16;719:10:20;1422:23:16;1414:68;;;;-1:-1:-1;;;1414:68:16;;21314:2:37;1414:68:16;;;21296:21:37;;;21333:18;;;21326:30;21392:34;21372:18;;;21365:62;21444:18;;1414:68:16;21112:356:37;2433:187:16;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:16;;;-1:-1:-1;;;;;;2541:17:16;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;1513:437:21:-;1588:13;1613:19;1645:10;1649:6;1645:1;:10;:::i;:::-;:14;;1658:1;1645:14;:::i;:::-;1635:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1635:25:21;;1613:47;;-1:-1:-1;;;1670:6:21;1677:1;1670:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1670:15:21;;;;;;;;;-1:-1:-1;;;1695:6:21;1702:1;1695:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1695:15:21;;;;;;;;-1:-1:-1;1725:9:21;1737:10;1741:6;1737:1;:10;:::i;:::-;:14;;1750:1;1737:14;:::i;:::-;1725:26;;1720:128;1757:1;1753;:5;1720:128;;;-1:-1:-1;;;1800:5:21;1808:3;1800:11;1791:21;;;;;;;:::i;:::-;;;;1779:6;1786:1;1779:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;1779:33:21;;;;;;;;-1:-1:-1;1836:1:21;1826:11;;;;;1760:3;;;:::i;:::-;;;1720:128;;;-1:-1:-1;1865:10:21;;1857:55;;;;-1:-1:-1;;;1857:55:21;;21816:2:37;1857:55:21;;;21798:21:37;;;21835:18;;;21828:30;21894:34;21874:18;;;21867:62;21946:18;;1857:55:21;21614:356:37;9889:890:22;9942:7;;-1:-1:-1;;;10017:15:22;;10013:99;;-1:-1:-1;;;10052:15:22;;;-1:-1:-1;10095:2:22;10085:12;10013:99;10138:6;10129:5;:15;10125:99;;10173:6;10164:15;;;-1:-1:-1;10207:2:22;10197:12;10125:99;10250:6;10241:5;:15;10237:99;;10285:6;10276:15;;;-1:-1:-1;10319:2:22;10309:12;10237:99;10362:5;10353;:14;10349:96;;10396:5;10387:14;;;-1:-1:-1;10429:1:22;10419:11;10349:96;10471:5;10462;:14;10458:96;;10505:5;10496:14;;;-1:-1:-1;10538:1:22;10528:11;10458:96;10580:5;10571;:14;10567:96;;10614:5;10605:14;;;-1:-1:-1;10647:1:22;10637:11;10567:96;10689:5;10680;:14;10676:64;;10724:1;10714:11;10766:6;9889:890;-1:-1:-1;;9889:890:22:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:173:37;82:20;;-1:-1:-1;;;;;131:31:37;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;373:9;360:23;350:33;;402:38;436:2;425:9;421:18;402:38;:::i;:::-;392:48;;192:254;;;;;:::o;643:::-;711:6;719;772:2;760:9;751:7;747:23;743:32;740:52;;;788:1;785;778:12;740:52;811:29;830:9;811:29;:::i;:::-;801:39;887:2;872:18;;;;859:32;;-1:-1:-1;;;643:254:37:o;902:250::-;987:1;997:113;1011:6;1008:1;1005:13;997:113;;;1087:11;;;1081:18;1068:11;;;1061:39;1033:2;1026:10;997:113;;;-1:-1:-1;;1144:1:37;1126:16;;1119:27;902:250::o;1157:271::-;1199:3;1237:5;1231:12;1264:6;1259:3;1252:19;1280:76;1349:6;1342:4;1337:3;1333:14;1326:4;1319:5;1315:16;1280:76;:::i;:::-;1410:2;1389:15;-1:-1:-1;;1385:29:37;1376:39;;;;1417:4;1372:50;;1157:271;-1:-1:-1;;1157:271:37:o;1433:220::-;1582:2;1571:9;1564:21;1545:4;1602:45;1643:2;1632:9;1628:18;1620:6;1602:45;:::i;1658:180::-;1717:6;1770:2;1758:9;1749:7;1745:23;1741:32;1738:52;;;1786:1;1783;1776:12;1738:52;-1:-1:-1;1809:23:37;;1658:180;-1:-1:-1;1658:180:37:o;1843:127::-;1904:10;1899:3;1895:20;1892:1;1885:31;1935:4;1932:1;1925:15;1959:4;1956:1;1949:15;1975:275;2046:2;2040:9;2111:2;2092:13;;-1:-1:-1;;2088:27:37;2076:40;;2146:18;2131:34;;2167:22;;;2128:62;2125:88;;;2193:18;;:::i;:::-;2229:2;2222:22;1975:275;;-1:-1:-1;1975:275:37:o;2255:531::-;2298:5;2351:3;2344:4;2336:6;2332:17;2328:27;2318:55;;2369:1;2366;2359:12;2318:55;2405:6;2392:20;2431:18;2427:2;2424:26;2421:52;;;2453:18;;:::i;:::-;2497:55;2540:2;2521:13;;-1:-1:-1;;2517:27:37;2546:4;2513:38;2497:55;:::i;:::-;2577:2;2568:7;2561:19;2623:3;2616:4;2611:2;2603:6;2599:15;2595:26;2592:35;2589:55;;;2640:1;2637;2630:12;2589:55;2705:2;2698:4;2690:6;2686:17;2679:4;2670:7;2666:18;2653:55;2753:1;2728:16;;;2746:4;2724:27;2717:38;;;;2732:7;2255:531;-1:-1:-1;;;2255:531:37:o;2791:543::-;2879:6;2887;2940:2;2928:9;2919:7;2915:23;2911:32;2908:52;;;2956:1;2953;2946:12;2908:52;2996:9;2983:23;3025:18;3066:2;3058:6;3055:14;3052:34;;;3082:1;3079;3072:12;3052:34;3105:50;3147:7;3138:6;3127:9;3123:22;3105:50;:::i;:::-;3095:60;;3208:2;3197:9;3193:18;3180:32;3164:48;;3237:2;3227:8;3224:16;3221:36;;;3253:1;3250;3243:12;3221:36;;3276:52;3320:7;3309:8;3298:9;3294:24;3276:52;:::i;:::-;3266:62;;;2791:543;;;;;:::o;3706:248::-;3774:6;3782;3835:2;3823:9;3814:7;3810:23;3806:32;3803:52;;;3851:1;3848;3841:12;3803:52;-1:-1:-1;;3874:23:37;;;3944:2;3929:18;;;3916:32;;-1:-1:-1;3706:248:37:o;3959:322::-;4028:6;4081:2;4069:9;4060:7;4056:23;4052:32;4049:52;;;4097:1;4094;4087:12;4049:52;4137:9;4124:23;4170:18;4162:6;4159:30;4156:50;;;4202:1;4199;4192:12;4156:50;4225;4267:7;4258:6;4247:9;4243:22;4225:50;:::i;:::-;4215:60;3959:322;-1:-1:-1;;;;3959:322:37:o;4468:803::-;4630:4;4659:2;4699;4688:9;4684:18;4729:2;4718:9;4711:21;4752:6;4787;4781:13;4818:6;4810;4803:22;4856:2;4845:9;4841:18;4834:25;;4918:2;4908:6;4905:1;4901:14;4890:9;4886:30;4882:39;4868:53;;4956:2;4948:6;4944:15;4977:1;4987:255;5001:6;4998:1;4995:13;4987:255;;;5094:2;5090:7;5078:9;5070:6;5066:22;5062:36;5057:3;5050:49;5122:40;5155:6;5146;5140:13;5122:40;:::i;:::-;5112:50;-1:-1:-1;5220:12:37;;;;5185:15;;;;5023:1;5016:9;4987:255;;;-1:-1:-1;5259:6:37;;4468:803;-1:-1:-1;;;;;;;4468:803:37:o;5484:943::-;5537:5;5590:3;5583:4;5575:6;5571:17;5567:27;5557:55;;5608:1;5605;5598:12;5557:55;5644:6;5631:20;5670:4;5693:18;5730:2;5726;5723:10;5720:36;;;5736:18;;:::i;:::-;5782:2;5779:1;5775:10;5805:28;5829:2;5825;5821:11;5805:28;:::i;:::-;5867:15;;;5937;;;5933:24;;;5898:12;;;;5969:15;;;5966:35;;;5997:1;5994;5987:12;5966:35;6033:2;6025:6;6021:15;6010:26;;6045:353;6061:6;6056:3;6053:15;6045:353;;;6147:3;6134:17;6183:2;6170:11;6167:19;6164:109;;;6227:1;6256:2;6252;6245:14;6164:109;6298:57;6351:3;6346:2;6332:11;6324:6;6320:24;6316:33;6298:57;:::i;:::-;6286:70;;-1:-1:-1;6078:12:37;;;;6376;;;;6045:353;;;6416:5;5484:943;-1:-1:-1;;;;;;;;5484:943:37:o;6432:847::-;6573:6;6581;6589;6597;6650:3;6638:9;6629:7;6625:23;6621:33;6618:53;;;6667:1;6664;6657:12;6618:53;6707:9;6694:23;6736:18;6777:2;6769:6;6766:14;6763:34;;;6793:1;6790;6783:12;6763:34;6816:50;6858:7;6849:6;6838:9;6834:22;6816:50;:::i;:::-;6806:60;;6919:2;6908:9;6904:18;6891:32;6875:48;;6948:2;6938:8;6935:16;6932:36;;;6964:1;6961;6954:12;6932:36;6987:52;7031:7;7020:8;7009:9;7005:24;6987:52;:::i;:::-;6977:62;;7092:2;7081:9;7077:18;7064:32;7048:48;;7121:2;7111:8;7108:16;7105:36;;;7137:1;7134;7127:12;7105:36;;7160:62;7214:7;7203:8;7192:9;7188:24;7160:62;:::i;:::-;6432:847;;;;-1:-1:-1;7150:72:37;;7269:2;7254:18;7241:32;;-1:-1:-1;;;6432:847:37:o;7284:578::-;7397:6;7405;7458:2;7446:9;7437:7;7433:23;7429:32;7426:52;;;7474:1;7471;7464:12;7426:52;7514:9;7501:23;7543:18;7584:2;7576:6;7573:14;7570:34;;;7600:1;7597;7590:12;7570:34;7623:50;7665:7;7656:6;7645:9;7641:22;7623:50;:::i;:::-;7613:60;;7726:2;7715:9;7711:18;7698:32;7682:48;;7755:2;7745:8;7742:16;7739:36;;;7771:1;7768;7761:12;7739:36;;7794:62;7848:7;7837:8;7826:9;7822:24;7794:62;:::i;7867:316::-;7944:6;7952;7960;8013:2;8001:9;7992:7;7988:23;7984:32;7981:52;;;8029:1;8026;8019:12;7981:52;-1:-1:-1;;8052:23:37;;;8122:2;8107:18;;8094:32;;-1:-1:-1;8173:2:37;8158:18;;;8145:32;;7867:316;-1:-1:-1;7867:316:37:o;8188:186::-;8247:6;8300:2;8288:9;8279:7;8275:23;8271:32;8268:52;;;8316:1;8313;8306:12;8268:52;8339:29;8358:9;8339:29;:::i;8576:380::-;8655:1;8651:12;;;;8698;;;8719:61;;8773:4;8765:6;8761:17;8751:27;;8719:61;8826:2;8818:6;8815:14;8795:18;8792:38;8789:161;;8872:10;8867:3;8863:20;8860:1;8853:31;8907:4;8904:1;8897:15;8935:4;8932:1;8925:15;8789:161;;8576:380;;;:::o;9087:1051::-;9263:3;9301:6;9295:13;9327:4;9340:64;9397:6;9392:3;9387:2;9379:6;9375:15;9340:64;:::i;:::-;9435:6;9430:3;9426:16;9413:29;;9462:1;9495:6;9489:13;9527:36;9553:9;9527:36;:::i;:::-;9582:1;9599:18;;;9626:141;;;;9781:1;9776:337;;;;9592:521;;9626:141;-1:-1:-1;;9661:24:37;;9647:39;;9738:16;;9731:24;9717:39;;9706:51;;;-1:-1:-1;9626:141:37;;9776:337;9807:6;9804:1;9797:17;9855:2;9852:1;9842:16;9880:1;9894:169;9908:8;9905:1;9902:15;9894:169;;;9990:14;;9975:13;;;9968:37;10033:16;;;;9925:10;;9894:169;;;9898:3;;10094:8;10087:5;10083:20;10076:27;;9592:521;-1:-1:-1;10129:3:37;;9087:1051;-1:-1:-1;;;;;;;;;9087:1051:37:o;10143:496::-;10322:3;10360:6;10354:13;10376:66;10435:6;10430:3;10423:4;10415:6;10411:17;10376:66;:::i;:::-;10505:13;;10464:16;;;;10527:70;10505:13;10464:16;10574:4;10562:17;;10527:70;:::i;:::-;10613:20;;10143:496;-1:-1:-1;;;;10143:496:37:o;10644:287::-;10773:3;10811:6;10805:13;10827:66;10886:6;10881:3;10874:4;10866:6;10862:17;10827:66;:::i;:::-;10909:16;;;;;10644:287;-1:-1:-1;;10644:287:37:o;10936:184::-;11006:6;11059:2;11047:9;11038:7;11034:23;11030:32;11027:52;;;11075:1;11072;11065:12;11027:52;-1:-1:-1;11098:16:37;;10936:184;-1:-1:-1;10936:184:37:o;11806:127::-;11867:10;11862:3;11858:20;11855:1;11848:31;11898:4;11895:1;11888:15;11922:4;11919:1;11912:15;11938:127;11999:10;11994:3;11990:20;11987:1;11980:31;12030:4;12027:1;12020:15;12054:4;12051:1;12044:15;12070:135;12109:3;12130:17;;;12127:43;;12150:18;;:::i;:::-;-1:-1:-1;12197:1:37;12186:13;;12070:135::o;13773:545::-;13875:2;13870:3;13867:11;13864:448;;;13911:1;13936:5;13932:2;13925:17;13981:4;13977:2;13967:19;14051:2;14039:10;14035:19;14032:1;14028:27;14022:4;14018:38;14087:4;14075:10;14072:20;14069:47;;;-1:-1:-1;14110:4:37;14069:47;14165:2;14160:3;14156:12;14153:1;14149:20;14143:4;14139:31;14129:41;;14220:82;14238:2;14231:5;14228:13;14220:82;;;14283:17;;;14264:1;14253:13;14220:82;;;14224:3;;;13864:448;13773:545;;;:::o;14494:1352::-;14620:3;14614:10;14647:18;14639:6;14636:30;14633:56;;;14669:18;;:::i;:::-;14698:97;14788:6;14748:38;14780:4;14774:11;14748:38;:::i;:::-;14742:4;14698:97;:::i;:::-;14850:4;;14914:2;14903:14;;14931:1;14926:663;;;;15633:1;15650:6;15647:89;;;-1:-1:-1;15702:19:37;;;15696:26;15647:89;-1:-1:-1;;14451:1:37;14447:11;;;14443:24;14439:29;14429:40;14475:1;14471:11;;;14426:57;15749:81;;14896:944;;14926:663;9034:1;9027:14;;;9071:4;9058:18;;-1:-1:-1;;14962:20:37;;;15080:236;15094:7;15091:1;15088:14;15080:236;;;15183:19;;;15177:26;15162:42;;15275:27;;;;15243:1;15231:14;;;;15110:19;;15080:236;;;15084:3;15344:6;15335:7;15332:19;15329:201;;;15405:19;;;15399:26;-1:-1:-1;;15488:1:37;15484:14;;;15500:3;15480:24;15476:37;15472:42;15457:58;15442:74;;15329:201;-1:-1:-1;;;;;15576:1:37;15560:14;;;15556:22;15543:36;;-1:-1:-1;14494:1352:37:o;15851:812::-;16230:3;16268:6;16262:13;16284:66;16343:6;16338:3;16331:4;16323:6;16319:17;16284:66;:::i;:::-;-1:-1:-1;;;16372:16:37;;;16397:27;;;16449:13;;16471:78;16449:13;16536:1;16525:13;;16518:4;16506:17;;16471:78;:::i;:::-;-1:-1:-1;;;16612:1:37;16568:20;;;;16604:10;;;16597:34;16655:1;16647:10;;15851:812;-1:-1:-1;;;;15851:812:37:o;16668:1201::-;17226:34;17221:3;17214:47;-1:-1:-1;;;17286:2:37;17281:3;17277:12;17270:27;17196:3;17326:6;17320:13;17342:73;17408:6;17403:2;17398:3;17394:12;17389:2;17381:6;17377:15;17342:73;:::i;:::-;-1:-1:-1;;;17474:2:37;17434:16;;;17466:11;;;17459:28;17512:13;;17534:74;17512:13;17594:2;17586:11;;17581:2;17569:15;;17534:74;:::i;:::-;17673:26;17668:2;17627:17;;;;17660:11;;;17653:47;17725:13;;17747:74;17725:13;17807:2;17799:11;;17794:2;17782:15;;17747:74;:::i;:::-;17841:17;17860:2;17837:26;;16668:1201;-1:-1:-1;;;;;16668:1201:37:o;17874:673::-;18184:6;18173:9;18166:25;18227:3;18222:2;18211:9;18207:18;18200:31;18147:4;18248:46;18289:3;18278:9;18274:19;18266:6;18248:46;:::i;:::-;-1:-1:-1;;;;;18330:32:37;;;;18325:2;18310:18;;18303:60;-1:-1:-1;18382:10:37;18428:15;;;18423:2;18408:18;;18401:43;18481:15;;;;18475:3;18460:19;;18453:44;18350:3;18513:19;18506:35;18240:54;17874:673;-1:-1:-1;;17874:673:37:o;19988:277::-;20055:6;20108:2;20096:9;20087:7;20083:23;20079:32;20076:52;;;20124:1;20121;20114:12;20076:52;20156:9;20150:16;20209:5;20202:13;20195:21;20188:5;20185:32;20175:60;;20231:1;20228;20221:12;20809:125;20874:9;;;20895:10;;;20892:36;;;20908:18;;:::i;20939:168::-;21012:9;;;21043;;21060:15;;;21054:22;;21040:37;21030:71;;21081:18;;:::i;21473:136::-;21512:3;21540:5;21530:39;;21549:18;;:::i;:::-;-1:-1:-1;;;21585:18:37;;21473:136::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "addressConcatLeaf(address,uint256)": "1e131bf2",
    "arbitrator()": "6cc6cde1",
    "challengePeriod()": "f3f480d9",
    "checkAnswer(uint256)": "ad891ad4",
    "checkAnswerStatus(uint256)": "71c0d915",
    "claim(uint256,uint256,uint256)": "efa9a9be",
    "getDateByRoot(string)": "581d8f36",
    "getQIDByDate(uint256)": "3c646787",
    "getRootByDate(uint256)": "291637a2",
    "getTreeByDate(uint256)": "657d7ab8",
    "mapDateAddressPay(uint256,address)": "14a0db9b",
    "mapDateQuestionID(uint256)": "4d0676d8",
    "mapDateRoot(uint256)": "cd09abec",
    "mapDateToAnswer(uint256)": "bffd8893",
    "mapDateTree(uint256,uint256)": "561444eb",
    "mapRootToDate(string)": "e20dee50",
    "owner()": "8da5cb5b",
    "postQuestion(string,string[])": "e1964a69",
    "renounceOwnership()": "715018a6",
    "rootExists(uint256)": "76a5cef3",
    "space()": "27af9e38",
    "stringToHash(string,string)": "3127718d",
    "toHex(bytes32)": "49e894d8",
    "transferOwnership(address)": "f2fde38b",
    "verify(string,string,string[],uint256)": "7d77869e"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_reality\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdc\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"answerStatus\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"questionID\",\"type\":\"bytes32\"}],\"name\":\"AnswerStatus\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountClaimed\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"questionSubmitted\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"questionID\",\"type\":\"bytes32\"}],\"name\":\"QuestionSubmitted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_add\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"addressConcatLeaf\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"arbitrator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"challengePeriod\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_effectiveDate\",\"type\":\"uint256\"}],\"name\":\"checkAnswer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_effectiveDate\",\"type\":\"uint256\"}],\"name\":\"checkAnswerStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountEx\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_effectiveDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_position\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_root\",\"type\":\"string\"}],\"name\":\"getDateByRoot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_effectiveDate\",\"type\":\"uint256\"}],\"name\":\"getQIDByDate\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_effectiveDate\",\"type\":\"uint256\"}],\"name\":\"getRootByDate\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_effectiveDate\",\"type\":\"uint256\"}],\"name\":\"getTreeByDate\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"mapDateAddressPay\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"mapDateQuestionID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"mapDateRoot\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"mapDateToAnswer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"mapDateTree\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"mapRootToDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_merkleroot\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"_treeHash\",\"type\":\"string[]\"}],\"name\":\"postQuestion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rootExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"space\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_input1\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_input2\",\"type\":\"string\"}],\"name\":\"stringToHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_data\",\"type\":\"bytes32\"}],\"name\":\"toHex\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"root\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"leaf\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"leaves\",\"type\":\"string[]\"},{\"internalType\":\"uint256\",\"name\":\"position\",\"type\":\"uint256\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addressConcatLeaf(address,uint256)\":{\"params\":{\"_add\":\"is the input address\",\"_amount\":\"is the input amount\"}},\"checkAnswer(uint256)\":{\"params\":{\"_effectiveDate\":\"is the date the merkleroot and tree for a specific question are stored to\"}},\"checkAnswerStatus(uint256)\":{\"params\":{\"_effectiveDate\":\"is the date used to store the question\"}},\"claim(uint256,uint256,uint256)\":{\"params\":{\"_amountEx\":\"is a uint256 which represents the amount of usdc(or any other ERC20) alloted to the user\",\"_effectiveDate\":\"is a uint256 which represents the date in question\",\"_position\":\"is the numerical position within the leaves array in which the leaf in question should be found\"}},\"getDateByRoot(string)\":{\"params\":{\"_root\":\"is the root used to store the date\"}},\"getQIDByDate(uint256)\":{\"params\":{\"_effectiveDate\":\"is the date used to store the tree\"}},\"getRootByDate(uint256)\":{\"params\":{\"_effectiveDate\":\"is the date used to store the tree\"}},\"getTreeByDate(uint256)\":{\"params\":{\"_effectiveDate\":\"is the date used to store the tree\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"postQuestion(string,string[])\":{\"params\":{\"_merkleroot\":\"is the root in question\",\"_treeHash\":\"is an array of strings which are hashes for the merkle tree\"},\"returns\":{\"_0\":\"is a bytes32 Question ID from reality.eth\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"stringToHash(string,string)\":{\"params\":{\"_input1\":\"is the first input string value\",\"_input2\":\"is the second input string value\"},\"returns\":{\"_0\":\"is the bytes32 value as a string\"}},\"toHex(bytes32)\":{\"params\":{\"_data\":\"is the input bytes32 data\"},\"returns\":{\"_0\":\"is the converted string value\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"verify(string,string,string[],uint256)\":{\"params\":{\"leaf\":\"is the string value being checked\",\"leaves\":\"is the array of leaves used to construct the original root\",\"position\":\"is the numerical position within the leaves array in which the leaf in question should be found\",\"root\":\"is the root in question\"},\"returns\":{\"_0\":\"bool whether or not the leaf exists in the root\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addressConcatLeaf(address,uint256)\":{\"notice\":\"addressConcatLeaf is a view function used to construct a leaf string from an address and a uint amount\"},\"checkAnswer(uint256)\":{\"notice\":\"checkAnswer is a public function used to retrieve the answer from reality.eth\"},\"checkAnswerStatus(uint256)\":{\"notice\":\"checkAnswerStatus is used to check the status of an answer\"},\"claim(uint256,uint256,uint256)\":{\"notice\":\"claim verifies the user and amount and transfers ERC20 tokens(amount) if the caller matches the leaf position\"},\"constructor\":{\"notice\":\"the constructore takes in the addresses for the reality.eth contracts and USDC\"},\"getDateByRoot(string)\":{\"notice\":\"getDateByRoot is used to retrieve a specific Date by the Root used to store it\"},\"getQIDByDate(uint256)\":{\"notice\":\"getQIDByDate is used to retrieve a specific reality question ID by the Date used to store it\"},\"getRootByDate(uint256)\":{\"notice\":\"getRootByDate is used to retrieve a specific root by the Date used to store it\"},\"getTreeByDate(uint256)\":{\"notice\":\"getTreeByDate is used to retrieve a specific tree by the Date used to store it\"},\"postQuestion(string,string[])\":{\"notice\":\"postQuestion posts a question on reality and returns its Question ID\"},\"stringToHash(string,string)\":{\"notice\":\"stringToHash is a helper function that abi.encodePackeds to strings sha256 hashes them and then converts that back into a useable string\"},\"toHex(bytes32)\":{\"notice\":\"toHex converts a bytes32 to a string\"},\"verify(string,string,string[],uint256)\":{\"notice\":\"verify is used to check whether or not a leaf value exists within a given root\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Wrapper.sol\":\"Wrapper\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"src/MerkleSHA256.sol\":{\"keccak256\":\"0x3fe5c828eda95d33bc0cae7605570d8b5d9c72d292b88fa7f584dc3cd0502f1f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b17444eb1468a474e3834f202f6c61f53831301d4a1365a396655a2bb7ec3139\",\"dweb:/ipfs/QmdtmAeUVQJnUCQc3D7gik1cX3UjbhFEtfamPTT3ArL9ES\"]},\"src/Wrapper.sol\":{\"keccak256\":\"0xab9a232888eac834e7522dc112d4053ccaa7c63f1657c45a71e1630be783ddc2\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://a79b48e36da3d98389cc269a1461929465ae53e122813a4ff9794ac491e78a47\",\"dweb:/ipfs/QmUHnoVL7vtwdb4UAiqYZSiRytA9vNTTF74XCMQfuXpAc1\"]},\"src/interfaces/IBalanceHolder.sol\":{\"keccak256\":\"0x2a92823fd5f205d47e5f1b7a5945dade130a31c8ac6ae8d218b1715ed2213518\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://673999b89e1aa18fe685d313fc0db877700a6e1ea5eea63610e7007c76ea0f8c\",\"dweb:/ipfs/QmdHEm5kTUYRzFhtknsiEM6zpwPKW6NSjgZ3AnomCKkxDU\"]},\"src/interfaces/IRealityETH.sol\":{\"keccak256\":\"0xfe0466173eb5a3f2a5dc6a9520dd21cfe3497b8b9c189de356dbea7e5ade73e0\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://c72dece6037d46b47e8f1c8e191705dfb42aec53274eeedd0b5ffdfc4adffd51\",\"dweb:/ipfs/QmcazSR5bugJbtniJUjeoeUwM2BLzhJF5BwEzB7zEoyCnB\"]},\"src/interfaces/IWrapper.sol\":{\"keccak256\":\"0x71156c3fdd3ea5c35cbe3cd5d07fcd48c8e4c9240bd5ba7eff367239cb00c65b\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://eaba284a9723e5124963ce4359e6bb755f94ec79471aae89b4a4b6c449fecb1d\",\"dweb:/ipfs/QmPEaoiScn2P4135FYDM9EFbMLEp6WUVNTx3W8LnX1mdLR\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_reality",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_usdc",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "answerStatus",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "questionID",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AnswerStatus",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_claimer",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_amountClaimed",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Claimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "questionSubmitted",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "questionID",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "QuestionSubmitted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_add",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "addressConcatLeaf",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "arbitrator",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "challengePeriod",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_effectiveDate",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "checkAnswer"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_effectiveDate",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkAnswerStatus",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amountEx",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_effectiveDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_position",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_root",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getDateByRoot",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_effectiveDate",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getQIDByDate",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_effectiveDate",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRootByDate",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_effectiveDate",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTreeByDate",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "mapDateAddressPay",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "mapDateQuestionID",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "mapDateRoot",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "mapDateToAnswer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "mapDateTree",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "mapRootToDate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_merkleroot",
              "type": "string"
            },
            {
              "internalType": "string[]",
              "name": "_treeHash",
              "type": "string[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "postQuestion",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "rootExists",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "space",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_input1",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_input2",
              "type": "string"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "stringToHash",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_data",
              "type": "bytes32"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "toHex",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "root",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "leaf",
              "type": "string"
            },
            {
              "internalType": "string[]",
              "name": "leaves",
              "type": "string[]"
            },
            {
              "internalType": "uint256",
              "name": "position",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verify",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addressConcatLeaf(address,uint256)": {
            "params": {
              "_add": "is the input address",
              "_amount": "is the input amount"
            }
          },
          "checkAnswer(uint256)": {
            "params": {
              "_effectiveDate": "is the date the merkleroot and tree for a specific question are stored to"
            }
          },
          "checkAnswerStatus(uint256)": {
            "params": {
              "_effectiveDate": "is the date used to store the question"
            }
          },
          "claim(uint256,uint256,uint256)": {
            "params": {
              "_amountEx": "is a uint256 which represents the amount of usdc(or any other ERC20) alloted to the user",
              "_effectiveDate": "is a uint256 which represents the date in question",
              "_position": "is the numerical position within the leaves array in which the leaf in question should be found"
            }
          },
          "getDateByRoot(string)": {
            "params": {
              "_root": "is the root used to store the date"
            }
          },
          "getQIDByDate(uint256)": {
            "params": {
              "_effectiveDate": "is the date used to store the tree"
            }
          },
          "getRootByDate(uint256)": {
            "params": {
              "_effectiveDate": "is the date used to store the tree"
            }
          },
          "getTreeByDate(uint256)": {
            "params": {
              "_effectiveDate": "is the date used to store the tree"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "postQuestion(string,string[])": {
            "params": {
              "_merkleroot": "is the root in question",
              "_treeHash": "is an array of strings which are hashes for the merkle tree"
            },
            "returns": {
              "_0": "is a bytes32 Question ID from reality.eth"
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "stringToHash(string,string)": {
            "params": {
              "_input1": "is the first input string value",
              "_input2": "is the second input string value"
            },
            "returns": {
              "_0": "is the bytes32 value as a string"
            }
          },
          "toHex(bytes32)": {
            "params": {
              "_data": "is the input bytes32 data"
            },
            "returns": {
              "_0": "is the converted string value"
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "verify(string,string,string[],uint256)": {
            "params": {
              "leaf": "is the string value being checked",
              "leaves": "is the array of leaves used to construct the original root",
              "position": "is the numerical position within the leaves array in which the leaf in question should be found",
              "root": "is the root in question"
            },
            "returns": {
              "_0": "bool whether or not the leaf exists in the root"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addressConcatLeaf(address,uint256)": {
            "notice": "addressConcatLeaf is a view function used to construct a leaf string from an address and a uint amount"
          },
          "checkAnswer(uint256)": {
            "notice": "checkAnswer is a public function used to retrieve the answer from reality.eth"
          },
          "checkAnswerStatus(uint256)": {
            "notice": "checkAnswerStatus is used to check the status of an answer"
          },
          "claim(uint256,uint256,uint256)": {
            "notice": "claim verifies the user and amount and transfers ERC20 tokens(amount) if the caller matches the leaf position"
          },
          "constructor": {
            "notice": "the constructore takes in the addresses for the reality.eth contracts and USDC"
          },
          "getDateByRoot(string)": {
            "notice": "getDateByRoot is used to retrieve a specific Date by the Root used to store it"
          },
          "getQIDByDate(uint256)": {
            "notice": "getQIDByDate is used to retrieve a specific reality question ID by the Date used to store it"
          },
          "getRootByDate(uint256)": {
            "notice": "getRootByDate is used to retrieve a specific root by the Date used to store it"
          },
          "getTreeByDate(uint256)": {
            "notice": "getTreeByDate is used to retrieve a specific tree by the Date used to store it"
          },
          "postQuestion(string,string[])": {
            "notice": "postQuestion posts a question on reality and returns its Question ID"
          },
          "stringToHash(string,string)": {
            "notice": "stringToHash is a helper function that abi.encodePackeds to strings sha256 hashes them and then converts that back into a useable string"
          },
          "toHex(bytes32)": {
            "notice": "toHex converts a bytes32 to a string"
          },
          "verify(string,string,string[],uint256)": {
            "notice": "verify is used to check whether or not a leaf value exists within a given root"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/Wrapper.sol": "Wrapper"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
        "urls": [
          "bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
          "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
        "urls": [
          "bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
          "dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"
        ],
        "license": "MIT"
      },
      "src/MerkleSHA256.sol": {
        "keccak256": "0x3fe5c828eda95d33bc0cae7605570d8b5d9c72d292b88fa7f584dc3cd0502f1f",
        "urls": [
          "bzz-raw://b17444eb1468a474e3834f202f6c61f53831301d4a1365a396655a2bb7ec3139",
          "dweb:/ipfs/QmdtmAeUVQJnUCQc3D7gik1cX3UjbhFEtfamPTT3ArL9ES"
        ],
        "license": "UNLICENSED"
      },
      "src/Wrapper.sol": {
        "keccak256": "0xab9a232888eac834e7522dc112d4053ccaa7c63f1657c45a71e1630be783ddc2",
        "urls": [
          "bzz-raw://a79b48e36da3d98389cc269a1461929465ae53e122813a4ff9794ac491e78a47",
          "dweb:/ipfs/QmUHnoVL7vtwdb4UAiqYZSiRytA9vNTTF74XCMQfuXpAc1"
        ],
        "license": "GPL-3.0-only"
      },
      "src/interfaces/IBalanceHolder.sol": {
        "keccak256": "0x2a92823fd5f205d47e5f1b7a5945dade130a31c8ac6ae8d218b1715ed2213518",
        "urls": [
          "bzz-raw://673999b89e1aa18fe685d313fc0db877700a6e1ea5eea63610e7007c76ea0f8c",
          "dweb:/ipfs/QmdHEm5kTUYRzFhtknsiEM6zpwPKW6NSjgZ3AnomCKkxDU"
        ],
        "license": "GPL-3.0-only"
      },
      "src/interfaces/IRealityETH.sol": {
        "keccak256": "0xfe0466173eb5a3f2a5dc6a9520dd21cfe3497b8b9c189de356dbea7e5ade73e0",
        "urls": [
          "bzz-raw://c72dece6037d46b47e8f1c8e191705dfb42aec53274eeedd0b5ffdfc4adffd51",
          "dweb:/ipfs/QmcazSR5bugJbtniJUjeoeUwM2BLzhJF5BwEzB7zEoyCnB"
        ],
        "license": "GPL-3.0-only"
      },
      "src/interfaces/IWrapper.sol": {
        "keccak256": "0x71156c3fdd3ea5c35cbe3cd5d07fcd48c8e4c9240bd5ba7eff367239cb00c65b",
        "urls": [
          "bzz-raw://eaba284a9723e5124963ce4359e6bb755f94ec79471aae89b4a4b6c449fecb1d",
          "dweb:/ipfs/QmPEaoiScn2P4135FYDM9EFbMLEp6WUVNTx3W8LnX1mdLR"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/Wrapper.sol",
    "id": 29309,
    "exportedSymbols": {
      "Context": [27328],
      "IBalanceHolder": [29321],
      "IERC20": [27281],
      "IRealityETH": [29859],
      "IWrapper": [29931],
      "Math": [28368],
      "MerkleSHA256": [28704],
      "Ownable": [26616],
      "Strings": [27503],
      "Wrapper": [29308]
    },
    "nodeType": "SourceUnit",
    "src": "41:7234:29",
    "nodes": [
      {
        "id": 28819,
        "nodeType": "PragmaDirective",
        "src": "41:25:29",
        "nodes": [],
        "literals": ["solidity", ">=", "0.8", ".17"]
      },
      {
        "id": 28820,
        "nodeType": "ImportDirective",
        "src": "68:35:29",
        "nodes": [],
        "absolutePath": "src/interfaces/IWrapper.sol",
        "file": "./interfaces/IWrapper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 29309,
        "sourceUnit": 29932,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 28821,
        "nodeType": "ImportDirective",
        "src": "104:38:29",
        "nodes": [],
        "absolutePath": "src/interfaces/IRealityETH.sol",
        "file": "./interfaces/IRealityETH.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 29309,
        "sourceUnit": 29860,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 28822,
        "nodeType": "ImportDirective",
        "src": "143:28:29",
        "nodes": [],
        "absolutePath": "src/MerkleSHA256.sol",
        "file": "./MerkleSHA256.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 29309,
        "sourceUnit": 28705,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 28823,
        "nodeType": "ImportDirective",
        "src": "172:60:29",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "file": "openzeppelin-contracts/contracts/utils/Strings.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 29309,
        "sourceUnit": 27504,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 28824,
        "nodeType": "ImportDirective",
        "src": "233:65:29",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 29309,
        "sourceUnit": 27282,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 28825,
        "nodeType": "ImportDirective",
        "src": "299:61:29",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "openzeppelin-contracts/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 29309,
        "sourceUnit": 26617,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29308,
        "nodeType": "ContractDefinition",
        "src": "363:6911:29",
        "nodes": [
          {
            "id": 28834,
            "nodeType": "VariableDeclaration",
            "src": "435:37:29",
            "nodes": [],
            "constant": false,
            "functionSelector": "f3f480d9",
            "mutability": "mutable",
            "name": "challengePeriod",
            "nameLocation": "449:15:29",
            "scope": 29308,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 28832,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "435:6:29",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": {
              "hexValue": "3836343030",
              "id": 28833,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "467:5:29",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_86400_by_1",
                "typeString": "int_const 86400"
              },
              "value": "86400"
            },
            "visibility": "public"
          },
          {
            "id": 28837,
            "nodeType": "VariableDeclaration",
            "src": "487:70:29",
            "nodes": [],
            "constant": false,
            "functionSelector": "6cc6cde1",
            "mutability": "mutable",
            "name": "arbitrator",
            "nameLocation": "502:10:29",
            "scope": 29308,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 28835,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "487:7:29",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030",
              "id": 28836,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "515:42:29",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x0000000000000000000000000000000000000000"
            },
            "visibility": "public"
          },
          {
            "id": 28840,
            "nodeType": "VariableDeclaration",
            "src": "572:25:29",
            "nodes": [],
            "constant": false,
            "functionSelector": "27af9e38",
            "mutability": "mutable",
            "name": "space",
            "nameLocation": "586:5:29",
            "scope": 29308,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 28838,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "572:6:29",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "2d",
              "id": 28839,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "594:3:29",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
                "typeString": "literal_string \"-\""
              },
              "value": "-"
            },
            "visibility": "public"
          },
          {
            "id": 28844,
            "nodeType": "VariableDeclaration",
            "src": "603:42:29",
            "nodes": [],
            "constant": false,
            "functionSelector": "cd09abec",
            "mutability": "mutable",
            "name": "mapDateRoot",
            "nameLocation": "634:11:29",
            "scope": 29308,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
              "typeString": "mapping(uint256 => string)"
            },
            "typeName": {
              "id": 28843,
              "keyType": {
                "id": 28841,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "611:4:29",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "603:23:29",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                "typeString": "mapping(uint256 => string)"
              },
              "valueType": {
                "id": 28842,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "619:6:29",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 28848,
            "nodeType": "VariableDeclaration",
            "src": "651:39:29",
            "nodes": [],
            "constant": false,
            "functionSelector": "76a5cef3",
            "mutability": "mutable",
            "name": "rootExists",
            "nameLocation": "680:10:29",
            "scope": 29308,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
              "typeString": "mapping(uint256 => bool)"
            },
            "typeName": {
              "id": 28847,
              "keyType": {
                "id": 28845,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "659:4:29",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "651:21:29",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                "typeString": "mapping(uint256 => bool)"
              },
              "valueType": {
                "id": 28846,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "667:4:29",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 28852,
            "nodeType": "VariableDeclaration",
            "src": "696:49:29",
            "nodes": [],
            "constant": false,
            "functionSelector": "4d0676d8",
            "mutability": "mutable",
            "name": "mapDateQuestionID",
            "nameLocation": "728:17:29",
            "scope": 29308,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
              "typeString": "mapping(uint256 => bytes32)"
            },
            "typeName": {
              "id": 28851,
              "keyType": {
                "id": 28849,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "704:4:29",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "696:24:29",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                "typeString": "mapping(uint256 => bytes32)"
              },
              "valueType": {
                "id": 28850,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "712:7:29",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 28857,
            "nodeType": "VariableDeclaration",
            "src": "751:45:29",
            "nodes": [],
            "constant": false,
            "functionSelector": "561444eb",
            "mutability": "mutable",
            "name": "mapDateTree",
            "nameLocation": "785:11:29",
            "scope": 29308,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_string_storage_$dyn_storage_$",
              "typeString": "mapping(uint256 => string[])"
            },
            "typeName": {
              "id": 28856,
              "keyType": {
                "id": 28853,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "759:4:29",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "751:26:29",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_string_storage_$dyn_storage_$",
                "typeString": "mapping(uint256 => string[])"
              },
              "valueType": {
                "baseType": {
                  "id": 28854,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "768:6:29",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "id": 28855,
                "nodeType": "ArrayTypeName",
                "src": "768:8:29",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                  "typeString": "string[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 28861,
            "nodeType": "VariableDeclaration",
            "src": "802:47:29",
            "nodes": [],
            "constant": false,
            "functionSelector": "e20dee50",
            "mutability": "mutable",
            "name": "mapRootToDate",
            "nameLocation": "836:13:29",
            "scope": 29308,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
              "typeString": "mapping(string => uint256)"
            },
            "typeName": {
              "id": 28860,
              "keyType": {
                "id": 28858,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "810:6:29",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "802:26:29",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                "typeString": "mapping(string => uint256)"
              },
              "valueType": {
                "id": 28859,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "820:7:29",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 28865,
            "nodeType": "VariableDeclaration",
            "src": "855:44:29",
            "nodes": [],
            "constant": false,
            "functionSelector": "bffd8893",
            "mutability": "mutable",
            "name": "mapDateToAnswer",
            "nameLocation": "884:15:29",
            "scope": 29308,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
              "typeString": "mapping(uint256 => bool)"
            },
            "typeName": {
              "id": 28864,
              "keyType": {
                "id": 28862,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "863:4:29",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "855:21:29",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                "typeString": "mapping(uint256 => bool)"
              },
              "valueType": {
                "id": 28863,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "871:4:29",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 28871,
            "nodeType": "VariableDeclaration",
            "src": "905:66:29",
            "nodes": [],
            "constant": false,
            "functionSelector": "14a0db9b",
            "mutability": "mutable",
            "name": "mapDateAddressPay",
            "nameLocation": "954:17:29",
            "scope": 29308,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(uint256 => mapping(address => bool))"
            },
            "typeName": {
              "id": 28870,
              "keyType": {
                "id": 28866,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "913:4:29",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "905:41:29",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(uint256 => mapping(address => bool))"
              },
              "valueType": {
                "id": 28869,
                "keyType": {
                  "id": 28867,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "929:7:29",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "921:24:29",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 28868,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "940:4:29",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 28874,
            "nodeType": "VariableDeclaration",
            "src": "979:23:29",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "iRealityETH",
            "nameLocation": "991:11:29",
            "scope": 29308,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IRealityETH_$29859",
              "typeString": "contract IRealityETH"
            },
            "typeName": {
              "id": 28873,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 28872,
                "name": "IRealityETH",
                "nameLocations": ["979:11:29"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 29859,
                "src": "979:11:29"
              },
              "referencedDeclaration": 29859,
              "src": "979:11:29",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IRealityETH_$29859",
                "typeString": "contract IRealityETH"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 28877,
            "nodeType": "VariableDeclaration",
            "src": "1030:11:29",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "usdc",
            "nameLocation": "1037:4:29",
            "scope": 29308,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$27281",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 28876,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 28875,
                "name": "IERC20",
                "nameLocations": ["1030:6:29"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 27281,
                "src": "1030:6:29"
              },
              "referencedDeclaration": 27281,
              "src": "1030:6:29",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$27281",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 28883,
            "nodeType": "EventDefinition",
            "src": "1073:70:29",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "0abbd316cde29430a32db2af046d35e125b792bc6dd0ef90f92e143b52ec8030",
            "name": "QuestionSubmitted",
            "nameLocation": "1079:17:29",
            "parameters": {
              "id": 28882,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28879,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "questionSubmitted",
                  "nameLocation": "1104:17:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 28883,
                  "src": "1097:24:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 28878,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1097:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28881,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "questionID",
                  "nameLocation": "1131:10:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 28883,
                  "src": "1123:18:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 28880,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1123:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1096:46:29"
            }
          },
          {
            "id": 28889,
            "nodeType": "EventDefinition",
            "src": "1148:60:29",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "774525447b3c80128a3cd56e15f1bef3defbb37b52d174bf0268d9a39f4f3576",
            "name": "AnswerStatus",
            "nameLocation": "1154:12:29",
            "parameters": {
              "id": 28888,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28885,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "answerStatus",
                  "nameLocation": "1174:12:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 28889,
                  "src": "1167:19:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 28884,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1167:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28887,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "questionID",
                  "nameLocation": "1196:10:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 28889,
                  "src": "1188:18:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 28886,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1188:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1166:41:29"
            }
          },
          {
            "id": 28895,
            "nodeType": "EventDefinition",
            "src": "1213:56:29",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "d8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a",
            "name": "Claimed",
            "nameLocation": "1219:7:29",
            "parameters": {
              "id": 28894,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28891,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_claimer",
                  "nameLocation": "1235:8:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 28895,
                  "src": "1227:16:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28890,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1227:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28893,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amountClaimed",
                  "nameLocation": "1253:14:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 28895,
                  "src": "1245:22:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28892,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1245:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1226:42:29"
            }
          },
          {
            "id": 28916,
            "nodeType": "FunctionDefinition",
            "src": "1382:123:29",
            "nodes": [],
            "body": {
              "id": 28915,
              "nodeType": "Block",
              "src": "1427:78:29",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 28907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 28903,
                      "name": "iRealityETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28874,
                      "src": "1435:11:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRealityETH_$29859",
                        "typeString": "contract IRealityETH"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 28905,
                          "name": "_reality",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28898,
                          "src": "1461:8:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 28904,
                        "name": "IRealityETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29859,
                        "src": "1449:11:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IRealityETH_$29859_$",
                          "typeString": "type(contract IRealityETH)"
                        }
                      },
                      "id": 28906,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1449:21:29",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRealityETH_$29859",
                        "typeString": "contract IRealityETH"
                      }
                    },
                    "src": "1435:35:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRealityETH_$29859",
                      "typeString": "contract IRealityETH"
                    }
                  },
                  "id": 28908,
                  "nodeType": "ExpressionStatement",
                  "src": "1435:35:29"
                },
                {
                  "expression": {
                    "id": 28913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 28909,
                      "name": "usdc",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28877,
                      "src": "1478:4:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$27281",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 28911,
                          "name": "_usdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28900,
                          "src": "1492:5:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 28910,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27281,
                        "src": "1485:6:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$27281_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 28912,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1485:13:29",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$27281",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1478:20:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$27281",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 28914,
                  "nodeType": "ExpressionStatement",
                  "src": "1478:20:29"
                }
              ]
            },
            "documentation": {
              "id": 28896,
              "nodeType": "StructuredDocumentation",
              "src": "1276:101:29",
              "text": "@notice the constructore takes in the addresses for the reality.eth contracts and USDC"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 28901,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28898,
                  "mutability": "mutable",
                  "name": "_reality",
                  "nameLocation": "1402:8:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 28916,
                  "src": "1394:16:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28897,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1394:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28900,
                  "mutability": "mutable",
                  "name": "_usdc",
                  "nameLocation": "1420:5:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 28916,
                  "src": "1412:13:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28899,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1412:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1393:33:29"
            },
            "returnParameters": {
              "id": 28902,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1427:0:29"
            },
            "scope": 29308,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 29037,
            "nodeType": "FunctionDefinition",
            "src": "1788:1232:29",
            "nodes": [],
            "body": {
              "id": 29036,
              "nodeType": "Block",
              "src": "1899:1121:29",
              "nodes": [],
              "statements": [
                {
                  "assignments": [28930],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28930,
                      "mutability": "mutable",
                      "name": "output",
                      "nameLocation": "1958:6:29",
                      "nodeType": "VariableDeclaration",
                      "scope": 29036,
                      "src": "1945:19:29",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 28929,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1945:5:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 28931,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1945:19:29"
                },
                {
                  "assignments": [28933],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28933,
                      "mutability": "mutable",
                      "name": "effectiveDate",
                      "nameLocation": "1982:13:29",
                      "nodeType": "VariableDeclaration",
                      "scope": 29036,
                      "src": "1974:21:29",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 28932,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1974:7:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 28939,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 28936,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "2006:5:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 28937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2012:9:29",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "2006:15:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 28935,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1998:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 28934,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1998:7:29",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 28938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1998:24:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1974:48:29"
                },
                {
                  "expression": {
                    "id": 28944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 28940,
                        "name": "mapRootToDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28861,
                        "src": "2032:13:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                          "typeString": "mapping(string memory => uint256)"
                        }
                      },
                      "id": 28942,
                      "indexExpression": {
                        "id": 28941,
                        "name": "_merkleroot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28919,
                        "src": "2046:11:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2032:26:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 28943,
                      "name": "effectiveDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28933,
                      "src": "2061:13:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2032:42:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 28945,
                  "nodeType": "ExpressionStatement",
                  "src": "2032:42:29"
                },
                {
                  "expression": {
                    "id": 28950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 28946,
                        "name": "mapDateTree",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28857,
                        "src": "2084:11:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_string_storage_$dyn_storage_$",
                          "typeString": "mapping(uint256 => string storage ref[] storage ref)"
                        }
                      },
                      "id": 28948,
                      "indexExpression": {
                        "id": 28947,
                        "name": "effectiveDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28933,
                        "src": "2096:13:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2084:26:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                        "typeString": "string storage ref[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 28949,
                      "name": "_treeHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28922,
                      "src": "2113:9:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string memory[] memory"
                      }
                    },
                    "src": "2084:38:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                      "typeString": "string storage ref[] storage ref"
                    }
                  },
                  "id": 28951,
                  "nodeType": "ExpressionStatement",
                  "src": "2084:38:29"
                },
                {
                  "expression": {
                    "id": 28956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 28952,
                        "name": "mapDateRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28844,
                        "src": "2189:11:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                          "typeString": "mapping(uint256 => string storage ref)"
                        }
                      },
                      "id": 28954,
                      "indexExpression": {
                        "id": 28953,
                        "name": "effectiveDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28933,
                        "src": "2201:13:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2189:26:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 28955,
                      "name": "_merkleroot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28919,
                      "src": "2218:11:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2189:40:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 28957,
                  "nodeType": "ExpressionStatement",
                  "src": "2189:40:29"
                },
                {
                  "expression": {
                    "id": 28962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 28958,
                        "name": "rootExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28848,
                        "src": "2239:10:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 28960,
                      "indexExpression": {
                        "id": 28959,
                        "name": "effectiveDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28933,
                        "src": "2250:13:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2239:25:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 28961,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2267:4:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2239:32:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 28963,
                  "nodeType": "ExpressionStatement",
                  "src": "2239:32:29"
                },
                {
                  "body": {
                    "id": 28993,
                    "nodeType": "Block",
                    "src": "2328:114:29",
                    "statements": [
                      {
                        "expression": {
                          "id": 28986,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 28975,
                            "name": "output",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28930,
                            "src": "2342:6:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "components": [
                              {
                                "arguments": [
                                  {
                                    "id": 28978,
                                    "name": "output",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 28930,
                                    "src": "2369:6:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  {
                                    "hexValue": "22",
                                    "id": 28979,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2376:4:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0",
                                      "typeString": "literal_string \"\"\""
                                    },
                                    "value": "\""
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 28980,
                                      "name": "_treeHash",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 28922,
                                      "src": "2382:9:29",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "string memory[] memory"
                                      }
                                    },
                                    "id": 28982,
                                    "indexExpression": {
                                      "id": 28981,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 28965,
                                      "src": "2392:1:29",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2382:12:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  {
                                    "hexValue": "222c",
                                    "id": 28983,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2396:5:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb",
                                      "typeString": "literal_string \"\",\""
                                    },
                                    "value": "\","
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0",
                                      "typeString": "literal_string \"\"\""
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb",
                                      "typeString": "literal_string \"\",\""
                                    }
                                  ],
                                  "expression": {
                                    "id": 28976,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "2352:3:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 28977,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "2356:12:29",
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "2352:16:29",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 28984,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2352:50:29",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "id": 28985,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "2351:52:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "src": "2342:61:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 28987,
                        "nodeType": "ExpressionStatement",
                        "src": "2342:61:29"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 28990,
                              "name": "output",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28930,
                              "src": "2424:6:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 28989,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2417:6:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 28988,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "2417:6:29",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 28991,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2417:14:29",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 28992,
                        "nodeType": "ExpressionStatement",
                        "src": "2417:14:29"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 28971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 28968,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28965,
                      "src": "2301:1:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 28969,
                        "name": "_treeHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28922,
                        "src": "2305:9:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 28970,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2315:6:29",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2305:16:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2301:20:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 28994,
                  "initializationExpression": {
                    "assignments": [28965],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 28965,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2294:1:29",
                        "nodeType": "VariableDeclaration",
                        "scope": 28994,
                        "src": "2286:9:29",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 28964,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2286:7:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 28967,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 28966,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2298:1:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2286:13:29"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 28973,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2323:3:29",
                      "subExpression": {
                        "id": 28972,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28965,
                        "src": "2323:1:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 28974,
                    "nodeType": "ExpressionStatement",
                    "src": "2323:3:29"
                  },
                  "nodeType": "ForStatement",
                  "src": "2281:161:29"
                },
                {
                  "assignments": [28996],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28996,
                      "mutability": "mutable",
                      "name": "question",
                      "nameLocation": "2466:8:29",
                      "nodeType": "VariableDeclaration",
                      "scope": 29036,
                      "src": "2452:22:29",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 28995,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2452:6:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 29012,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "546865204d65726b6c65207472656520666f7220656666656374697665206461746520",
                            "id": 29001,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2512:37:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_f18200371ea9c28f2b33cd12727ae2486548f8a2a4dfd667d8fccb466f552c80",
                              "typeString": "literal_string \"The Merkle tree for effective date \""
                            },
                            "value": "The Merkle tree for effective date "
                          },
                          {
                            "arguments": [
                              {
                                "id": 29004,
                                "name": "effectiveDate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 28933,
                                "src": "2578:13:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 29002,
                                "name": "Strings",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27503,
                                "src": "2561:7:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Strings_$27503_$",
                                  "typeString": "type(library Strings)"
                                }
                              },
                              "id": 29003,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2569:8:29",
                              "memberName": "toString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 27386,
                              "src": "2561:16:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (string memory)"
                              }
                            },
                            "id": 29005,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2561:31:29",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "hexValue": "206973205b",
                            "id": 29006,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2604:7:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_777fe76bcd129909996c69332b9ec05b6df8885b70cf2a632f37f1aa1243f020",
                              "typeString": "literal_string \" is [\""
                            },
                            "value": " is ["
                          },
                          {
                            "id": 29007,
                            "name": "output",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28930,
                            "src": "2623:6:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "hexValue": "5d616e6420746865206d65726b6c6520726f6f7420697320",
                            "id": 29008,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2641:26:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_0064651a7c978a375fd995ce71add9ba9d4a264e33e164e0d0dfd0c5318df72d",
                              "typeString": "literal_string \"]and the merkle root is \""
                            },
                            "value": "]and the merkle root is "
                          },
                          {
                            "id": 29009,
                            "name": "_merkleroot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28919,
                            "src": "2679:11:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_f18200371ea9c28f2b33cd12727ae2486548f8a2a4dfd667d8fccb466f552c80",
                              "typeString": "literal_string \"The Merkle tree for effective date \""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_777fe76bcd129909996c69332b9ec05b6df8885b70cf2a632f37f1aa1243f020",
                              "typeString": "literal_string \" is [\""
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_0064651a7c978a375fd995ce71add9ba9d4a264e33e164e0d0dfd0c5318df72d",
                              "typeString": "literal_string \"]and the merkle root is \""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 28999,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2495:3:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 29000,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2499:12:29",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "2495:16:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 29010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2495:205:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 28998,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2477:6:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 28997,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2477:6:29",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 29011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2477:231:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2452:256:29"
                },
                {
                  "expression": {
                    "id": 29025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 29013,
                        "name": "mapDateQuestionID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28852,
                        "src": "2718:17:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                          "typeString": "mapping(uint256 => bytes32)"
                        }
                      },
                      "id": 29015,
                      "indexExpression": {
                        "id": 29014,
                        "name": "effectiveDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28933,
                        "src": "2736:13:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2718:32:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 29018,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2790:1:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "id": 29019,
                          "name": "question",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28996,
                          "src": "2805:8:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 29020,
                          "name": "arbitrator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28837,
                          "src": "2827:10:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 29021,
                          "name": "challengePeriod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28834,
                          "src": "2851:15:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 29022,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2880:1:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "30",
                          "id": 29023,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2895:1:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "expression": {
                          "id": 29016,
                          "name": "iRealityETH",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28874,
                          "src": "2753:11:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IRealityETH_$29859",
                            "typeString": "contract IRealityETH"
                          }
                        },
                        "id": 29017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2765:11:29",
                        "memberName": "askQuestion",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 29554,
                        "src": "2753:23:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_string_memory_ptr_$_t_address_$_t_uint32_$_t_uint32_$_t_uint256_$returns$_t_bytes32_$",
                          "typeString": "function (uint256,string memory,address,uint32,uint32,uint256) payable external returns (bytes32)"
                        }
                      },
                      "id": 29024,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2753:157:29",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2718:192:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 29026,
                  "nodeType": "ExpressionStatement",
                  "src": "2718:192:29"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "796573",
                        "id": 29028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2943:5:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_90dfb8fa37079daea9a1acb3e423e2351f0ba3fb27cf55bfa41ad2f8c58baea9",
                          "typeString": "literal_string \"yes\""
                        },
                        "value": "yes"
                      },
                      {
                        "baseExpression": {
                          "id": 29029,
                          "name": "mapDateQuestionID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28852,
                          "src": "2950:17:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                            "typeString": "mapping(uint256 => bytes32)"
                          }
                        },
                        "id": 29031,
                        "indexExpression": {
                          "id": 29030,
                          "name": "effectiveDate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28933,
                          "src": "2968:13:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2950:32:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_90dfb8fa37079daea9a1acb3e423e2351f0ba3fb27cf55bfa41ad2f8c58baea9",
                          "typeString": "literal_string \"yes\""
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 29027,
                      "name": "QuestionSubmitted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28883,
                      "src": "2925:17:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (string memory,bytes32)"
                      }
                    },
                    "id": 29032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2925:58:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29033,
                  "nodeType": "EmitStatement",
                  "src": "2920:63:29"
                },
                {
                  "expression": {
                    "id": 29034,
                    "name": "effectiveDate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 28933,
                    "src": "3000:13:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 28928,
                  "id": 29035,
                  "nodeType": "Return",
                  "src": "2993:20:29"
                }
              ]
            },
            "baseFunctions": [29871],
            "documentation": {
              "id": 28917,
              "nodeType": "StructuredDocumentation",
              "src": "1511:272:29",
              "text": "@notice postQuestion posts a question on reality and returns its Question ID\n@param _merkleroot is the root in question\n@param _treeHash is an array of strings which are hashes for the merkle tree\n@return is a bytes32 Question ID from reality.eth"
            },
            "functionSelector": "e1964a69",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 28925,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 28924,
                  "name": "onlyOwner",
                  "nameLocations": ["1873:9:29"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 26535,
                  "src": "1873:9:29"
                },
                "nodeType": "ModifierInvocation",
                "src": "1873:9:29"
              }
            ],
            "name": "postQuestion",
            "nameLocation": "1797:12:29",
            "parameters": {
              "id": 28923,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28919,
                  "mutability": "mutable",
                  "name": "_merkleroot",
                  "nameLocation": "1824:11:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 29037,
                  "src": "1810:25:29",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 28918,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1810:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28922,
                  "mutability": "mutable",
                  "name": "_treeHash",
                  "nameLocation": "1853:9:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 29037,
                  "src": "1837:25:29",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 28920,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "1837:6:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 28921,
                    "nodeType": "ArrayTypeName",
                    "src": "1837:8:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1809:54:29"
            },
            "returnParameters": {
              "id": 28928,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28927,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 29037,
                  "src": "1891:7:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28926,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1891:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1890:9:29"
            },
            "scope": 29308,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 29101,
            "nodeType": "FunctionDefinition",
            "src": "3231:724:29",
            "nodes": [],
            "body": {
              "id": 29100,
              "nodeType": "Block",
              "src": "3280:675:29",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 29044,
                          "name": "rootExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28848,
                          "src": "3296:10:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                            "typeString": "mapping(uint256 => bool)"
                          }
                        },
                        "id": 29046,
                        "indexExpression": {
                          "id": 29045,
                          "name": "_effectiveDate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29040,
                          "src": "3307:14:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3296:26:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f20526f6f742053746f72656420666f7220746861742064617465",
                        "id": 29047,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3324:30:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_04e02fbfe26aefbcd7279368c0011bf85f8b30d93fcd658ff0301f96b1622d33",
                          "typeString": "literal_string \"No Root Stored for that date\""
                        },
                        "value": "No Root Stored for that date"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_04e02fbfe26aefbcd7279368c0011bf85f8b30d93fcd658ff0301f96b1622d33",
                          "typeString": "literal_string \"No Root Stored for that date\""
                        }
                      ],
                      "id": 29043,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "3288:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 29048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3288:67:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29049,
                  "nodeType": "ExpressionStatement",
                  "src": "3288:67:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 29055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 29051,
                            "name": "mapDateToAnswer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28865,
                            "src": "3371:15:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                              "typeString": "mapping(uint256 => bool)"
                            }
                          },
                          "id": 29053,
                          "indexExpression": {
                            "id": 29052,
                            "name": "_effectiveDate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29040,
                            "src": "3387:14:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3371:31:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 29054,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3406:5:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "3371:40:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416e7377657220686173206265656e20636865636b6564",
                        "id": 29056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3413:25:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6dfeb6a034dbcc545614758f2ffc7c8612a5ab6bcce0a2cdddb8469ff77895be",
                          "typeString": "literal_string \"Answer has been checked\""
                        },
                        "value": "Answer has been checked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6dfeb6a034dbcc545614758f2ffc7c8612a5ab6bcce0a2cdddb8469ff77895be",
                          "typeString": "literal_string \"Answer has been checked\""
                        }
                      ],
                      "id": 29050,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "3363:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 29057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3363:76:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29058,
                  "nodeType": "ExpressionStatement",
                  "src": "3363:76:29"
                },
                {
                  "assignments": [29060],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 29060,
                      "mutability": "mutable",
                      "name": "answer",
                      "nameLocation": "3457:6:29",
                      "nodeType": "VariableDeclaration",
                      "scope": 29100,
                      "src": "3449:14:29",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 29059,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3449:7:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 29067,
                  "initialValue": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 29063,
                          "name": "mapDateQuestionID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28852,
                          "src": "3493:17:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                            "typeString": "mapping(uint256 => bytes32)"
                          }
                        },
                        "id": 29065,
                        "indexExpression": {
                          "id": 29064,
                          "name": "_effectiveDate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29040,
                          "src": "3511:14:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3493:33:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 29061,
                        "name": "iRealityETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28874,
                        "src": "3466:11:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRealityETH_$29859",
                          "typeString": "contract IRealityETH"
                        }
                      },
                      "id": 29062,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3478:14:29",
                      "memberName": "getFinalAnswer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29707,
                      "src": "3466:26:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32) view external returns (bytes32)"
                      }
                    },
                    "id": 29066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3466:61:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3449:78:29"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 29070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 29068,
                      "name": "answer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29060,
                      "src": "3541:6:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303031",
                      "id": 29069,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3551:66:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "0x0000000000000000000000000000000000000000000000000000000000000001"
                    },
                    "src": "3541:76:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 29098,
                    "nodeType": "Block",
                    "src": "3787:160:29",
                    "statements": [
                      {
                        "expression": {
                          "id": 29089,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 29085,
                              "name": "mapDateToAnswer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28865,
                              "src": "3801:15:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                "typeString": "mapping(uint256 => bool)"
                              }
                            },
                            "id": 29087,
                            "indexExpression": {
                              "id": 29086,
                              "name": "_effectiveDate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29040,
                              "src": "3817:14:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3801:31:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 29088,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3835:5:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "3801:39:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 29090,
                        "nodeType": "ExpressionStatement",
                        "src": "3801:39:29"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "hexValue": "726f6f7420686173206e6f74206265656e206163636570746564",
                              "id": 29092,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3872:28:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8ddce40cc3a9d7f6e299994896d88af28637bb862d71c2b88da2982dff1ffd30",
                                "typeString": "literal_string \"root has not been accepted\""
                              },
                              "value": "root has not been accepted"
                            },
                            {
                              "baseExpression": {
                                "id": 29093,
                                "name": "mapDateQuestionID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 28852,
                                "src": "3902:17:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                                  "typeString": "mapping(uint256 => bytes32)"
                                }
                              },
                              "id": 29095,
                              "indexExpression": {
                                "id": 29094,
                                "name": "_effectiveDate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29040,
                                "src": "3920:14:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3902:33:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_8ddce40cc3a9d7f6e299994896d88af28637bb862d71c2b88da2982dff1ffd30",
                                "typeString": "literal_string \"root has not been accepted\""
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 29091,
                            "name": "AnswerStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28889,
                            "src": "3859:12:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes32_$returns$__$",
                              "typeString": "function (string memory,bytes32)"
                            }
                          },
                          "id": 29096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3859:77:29",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 29097,
                        "nodeType": "EmitStatement",
                        "src": "3854:82:29"
                      }
                    ]
                  },
                  "id": 29099,
                  "nodeType": "IfStatement",
                  "src": "3537:410:29",
                  "trueBody": {
                    "id": 29084,
                    "nodeType": "Block",
                    "src": "3618:155:29",
                    "statements": [
                      {
                        "expression": {
                          "id": 29075,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 29071,
                              "name": "mapDateToAnswer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28865,
                              "src": "3632:15:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                "typeString": "mapping(uint256 => bool)"
                              }
                            },
                            "id": 29073,
                            "indexExpression": {
                              "id": 29072,
                              "name": "_effectiveDate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29040,
                              "src": "3648:14:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3632:31:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 29074,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3666:4:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "3632:38:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 29076,
                        "nodeType": "ExpressionStatement",
                        "src": "3632:38:29"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "hexValue": "726f6f7420686173206265656e206163636570746564",
                              "id": 29078,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3702:24:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b2c367070f6c77f0995e0c0cef0c5cf41c95c2ee0604cce5edc2a7691968ad71",
                                "typeString": "literal_string \"root has been accepted\""
                              },
                              "value": "root has been accepted"
                            },
                            {
                              "baseExpression": {
                                "id": 29079,
                                "name": "mapDateQuestionID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 28852,
                                "src": "3728:17:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                                  "typeString": "mapping(uint256 => bytes32)"
                                }
                              },
                              "id": 29081,
                              "indexExpression": {
                                "id": 29080,
                                "name": "_effectiveDate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29040,
                                "src": "3746:14:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3728:33:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_b2c367070f6c77f0995e0c0cef0c5cf41c95c2ee0604cce5edc2a7691968ad71",
                                "typeString": "literal_string \"root has been accepted\""
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 29077,
                            "name": "AnswerStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28889,
                            "src": "3689:12:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes32_$returns$__$",
                              "typeString": "function (string memory,bytes32)"
                            }
                          },
                          "id": 29082,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3689:73:29",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 29083,
                        "nodeType": "EmitStatement",
                        "src": "3684:78:29"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [29876],
            "documentation": {
              "id": 29038,
              "nodeType": "StructuredDocumentation",
              "src": "3026:200:29",
              "text": "@notice checkAnswer is a public function used to retrieve the answer from reality.eth\n@param _effectiveDate is the date the merkleroot and tree for a specific question are stored to"
            },
            "functionSelector": "ad891ad4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkAnswer",
            "nameLocation": "3240:11:29",
            "parameters": {
              "id": 29041,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29040,
                  "mutability": "mutable",
                  "name": "_effectiveDate",
                  "nameLocation": "3257:14:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 29101,
                  "src": "3252:19:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29039,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3252:4:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3251:21:29"
            },
            "returnParameters": {
              "id": 29042,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3280:0:29"
            },
            "scope": 29308,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 29195,
            "nodeType": "FunctionDefinition",
            "src": "4404:737:29",
            "nodes": [],
            "body": {
              "id": 29194,
              "nodeType": "Block",
              "src": "4490:651:29",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 29115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 29111,
                        "name": "mapDateToAnswer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28865,
                        "src": "4501:15:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 29113,
                      "indexExpression": {
                        "id": 29112,
                        "name": "_effectiveDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29106,
                        "src": "4517:14:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4501:31:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "66616c7365",
                      "id": 29114,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4536:5:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "4501:40:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 29121,
                  "nodeType": "IfStatement",
                  "src": "4498:91:29",
                  "trueBody": {
                    "id": 29120,
                    "nodeType": "Block",
                    "src": "4543:46:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 29117,
                              "name": "_effectiveDate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29106,
                              "src": "4565:14:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 29116,
                            "name": "checkAnswer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29101,
                            "src": "4553:11:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 29118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4553:27:29",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 29119,
                        "nodeType": "ExpressionStatement",
                        "src": "4553:27:29"
                      }
                    ]
                  }
                },
                {
                  "assignments": [29126],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 29126,
                      "mutability": "mutable",
                      "name": "tree",
                      "nameLocation": "4612:4:29",
                      "nodeType": "VariableDeclaration",
                      "scope": 29194,
                      "src": "4596:20:29",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 29124,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "4596:6:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 29125,
                        "nodeType": "ArrayTypeName",
                        "src": "4596:8:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 29130,
                  "initialValue": {
                    "baseExpression": {
                      "id": 29127,
                      "name": "mapDateTree",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28857,
                      "src": "4619:11:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_string_storage_$dyn_storage_$",
                        "typeString": "mapping(uint256 => string storage ref[] storage ref)"
                      }
                    },
                    "id": 29129,
                    "indexExpression": {
                      "id": 29128,
                      "name": "_effectiveDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29106,
                      "src": "4631:14:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4619:27:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                      "typeString": "string storage ref[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4596:50:29"
                },
                {
                  "assignments": [29132],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 29132,
                      "mutability": "mutable",
                      "name": "root",
                      "nameLocation": "4668:4:29",
                      "nodeType": "VariableDeclaration",
                      "scope": 29194,
                      "src": "4654:18:29",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 29131,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "4654:6:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 29136,
                  "initialValue": {
                    "baseExpression": {
                      "id": 29133,
                      "name": "mapDateRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28844,
                      "src": "4675:11:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                        "typeString": "mapping(uint256 => string storage ref)"
                      }
                    },
                    "id": 29135,
                    "indexExpression": {
                      "id": 29134,
                      "name": "_effectiveDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29106,
                      "src": "4687:14:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4675:27:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4654:48:29"
                },
                {
                  "assignments": [29138],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 29138,
                      "mutability": "mutable",
                      "name": "leaf",
                      "nameLocation": "4724:4:29",
                      "nodeType": "VariableDeclaration",
                      "scope": 29194,
                      "src": "4710:18:29",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 29137,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "4710:6:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 29144,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 29140,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4749:3:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 29141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4753:6:29",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4749:10:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 29142,
                        "name": "_amountEx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29104,
                        "src": "4761:9:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 29139,
                      "name": "addressConcatLeaf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29241,
                      "src": "4731:17:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (address,uint256) view returns (string memory)"
                      }
                    },
                    "id": 29143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4731:40:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4710:61:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 29153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 29146,
                              "name": "mapDateAddressPay",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28871,
                              "src": "4787:17:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                                "typeString": "mapping(uint256 => mapping(address => bool))"
                              }
                            },
                            "id": 29148,
                            "indexExpression": {
                              "id": 29147,
                              "name": "_effectiveDate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29106,
                              "src": "4805:14:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4787:33:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 29151,
                          "indexExpression": {
                            "expression": {
                              "id": 29149,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4821:3:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 29150,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4825:6:29",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4821:10:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4787:45:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 29152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4836:5:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "4787:54:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c657220616c72656164792070616964",
                        "id": 29154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4844:21:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5320b98e42c4c421efa87f4c78f3835849e749bd5cd9856a517a6014ff6ef0e8",
                          "typeString": "literal_string \"Caller already paid\""
                        },
                        "value": "Caller already paid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5320b98e42c4c421efa87f4c78f3835849e749bd5cd9856a517a6014ff6ef0e8",
                          "typeString": "literal_string \"Caller already paid\""
                        }
                      ],
                      "id": 29145,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "4779:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 29155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4779:87:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29156,
                  "nodeType": "ExpressionStatement",
                  "src": "4779:87:29"
                },
                {
                  "assignments": [29158],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 29158,
                      "mutability": "mutable",
                      "name": "correct",
                      "nameLocation": "4879:7:29",
                      "nodeType": "VariableDeclaration",
                      "scope": 29194,
                      "src": "4874:12:29",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 29157,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4874:4:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 29165,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 29160,
                        "name": "root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29132,
                        "src": "4896:4:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 29161,
                        "name": "leaf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29138,
                        "src": "4902:4:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 29162,
                        "name": "tree",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29126,
                        "src": "4908:4:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      {
                        "id": 29163,
                        "name": "_position",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29108,
                        "src": "4914:9:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 29159,
                      "name": "verify",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28703,
                      "src": "4889:6:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (string memory,string memory,string memory[] memory,uint256) view returns (bool)"
                      }
                    },
                    "id": 29164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4889:35:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4874:50:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 29167,
                        "name": "correct",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29158,
                        "src": "4940:7:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c657220646f6573206e6f74206d61746368206c65616620706f736974696f6e",
                        "id": 29168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4949:37:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b9b1e37d8f47e8a8e3bb060807d502dab36ebdca96e273e927e4e0f0984b2434",
                          "typeString": "literal_string \"Caller does not match leaf position\""
                        },
                        "value": "Caller does not match leaf position"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b9b1e37d8f47e8a8e3bb060807d502dab36ebdca96e273e927e4e0f0984b2434",
                          "typeString": "literal_string \"Caller does not match leaf position\""
                        }
                      ],
                      "id": 29166,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "4932:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 29169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4932:55:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29170,
                  "nodeType": "ExpressionStatement",
                  "src": "4932:55:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 29174,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5009:3:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 29175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5013:6:29",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5009:10:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 29176,
                        "name": "_amountEx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29104,
                        "src": "5021:9:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 29171,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28877,
                        "src": "4995:4:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$27281",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 29173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5000:8:29",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27248,
                      "src": "4995:13:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 29177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4995:36:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 29178,
                  "nodeType": "ExpressionStatement",
                  "src": "4995:36:29"
                },
                {
                  "expression": {
                    "id": 29186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 29179,
                          "name": "mapDateAddressPay",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28871,
                          "src": "5039:17:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(uint256 => mapping(address => bool))"
                          }
                        },
                        "id": 29183,
                        "indexExpression": {
                          "id": 29180,
                          "name": "_effectiveDate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29106,
                          "src": "5057:14:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5039:33:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 29184,
                      "indexExpression": {
                        "expression": {
                          "id": 29181,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5073:3:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 29182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5077:6:29",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5073:10:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5039:45:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 29185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5087:4:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5039:52:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 29187,
                  "nodeType": "ExpressionStatement",
                  "src": "5039:52:29"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 29189,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5112:3:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 29190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5116:6:29",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5112:10:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 29191,
                        "name": "_amountEx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29104,
                        "src": "5124:9:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 29188,
                      "name": "Claimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28895,
                      "src": "5104:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 29192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5104:30:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29193,
                  "nodeType": "EmitStatement",
                  "src": "5099:35:29"
                }
              ]
            },
            "baseFunctions": [29885],
            "documentation": {
              "id": 29102,
              "nodeType": "StructuredDocumentation",
              "src": "3962:437:29",
              "text": "@notice claim verifies the user and amount and transfers ERC20 tokens(amount) if the caller matches the leaf position\n@param _amountEx is a uint256 which represents the amount of usdc(or any other ERC20) alloted to the user\n@param _effectiveDate is a uint256 which represents the date in question\n@param _position is the numerical position within the leaves array in which the leaf in question should be found"
            },
            "functionSelector": "efa9a9be",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claim",
            "nameLocation": "4413:5:29",
            "parameters": {
              "id": 29109,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29104,
                  "mutability": "mutable",
                  "name": "_amountEx",
                  "nameLocation": "4427:9:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 29195,
                  "src": "4419:17:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29103,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4419:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29106,
                  "mutability": "mutable",
                  "name": "_effectiveDate",
                  "nameLocation": "4446:14:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 29195,
                  "src": "4438:22:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29105,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4438:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29108,
                  "mutability": "mutable",
                  "name": "_position",
                  "nameLocation": "4470:9:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 29195,
                  "src": "4462:17:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29107,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4462:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4418:62:29"
            },
            "returnParameters": {
              "id": 29110,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4490:0:29"
            },
            "scope": 29308,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 29241,
            "nodeType": "FunctionDefinition",
            "src": "5389:387:29",
            "nodes": [],
            "body": {
              "id": 29240,
              "nodeType": "Block",
              "src": "5483:293:29",
              "nodes": [],
              "statements": [
                {
                  "assignments": [29206],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 29206,
                      "mutability": "mutable",
                      "name": "senderAddress",
                      "nameLocation": "5505:13:29",
                      "nodeType": "VariableDeclaration",
                      "scope": 29240,
                      "src": "5491:27:29",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 29205,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "5491:6:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 29212,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 29209,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5541:3:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 29210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5545:6:29",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5541:10:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 29207,
                        "name": "Strings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27503,
                        "src": "5521:7:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Strings_$27503_$",
                          "typeString": "type(library Strings)"
                        }
                      },
                      "id": 29208,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5529:11:29",
                      "memberName": "toHexString",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27502,
                      "src": "5521:19:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (address) pure returns (string memory)"
                      }
                    },
                    "id": 29211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5521:31:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5491:61:29"
                },
                {
                  "assignments": [29214],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 29214,
                      "mutability": "mutable",
                      "name": "amountString",
                      "nameLocation": "5574:12:29",
                      "nodeType": "VariableDeclaration",
                      "scope": 29240,
                      "src": "5560:26:29",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 29213,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "5560:6:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 29219,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 29217,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29200,
                        "src": "5606:7:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 29215,
                        "name": "Strings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27503,
                        "src": "5589:7:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Strings_$27503_$",
                          "typeString": "type(library Strings)"
                        }
                      },
                      "id": 29216,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5597:8:29",
                      "memberName": "toString",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27386,
                      "src": "5589:16:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (string memory)"
                      }
                    },
                    "id": 29218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5589:25:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5560:54:29"
                },
                {
                  "assignments": [29221],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 29221,
                      "mutability": "mutable",
                      "name": "firstHalf",
                      "nameLocation": "5636:9:29",
                      "nodeType": "VariableDeclaration",
                      "scope": 29240,
                      "src": "5622:23:29",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 29220,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "5622:6:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 29228,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 29225,
                        "name": "senderAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29206,
                        "src": "5662:13:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 29226,
                        "name": "space",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28840,
                        "src": "5677:5:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      ],
                      "expression": {
                        "id": 29223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5648:6:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 29222,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "5648:6:29",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 29224,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5655:6:29",
                      "memberName": "concat",
                      "nodeType": "MemberAccess",
                      "src": "5648:13:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
                        "typeString": "function () pure returns (string memory)"
                      }
                    },
                    "id": 29227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5648:35:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5622:61:29"
                },
                {
                  "assignments": [29230],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 29230,
                      "mutability": "mutable",
                      "name": "leaf",
                      "nameLocation": "5705:4:29",
                      "nodeType": "VariableDeclaration",
                      "scope": 29240,
                      "src": "5691:18:29",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 29229,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "5691:6:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 29237,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 29234,
                        "name": "firstHalf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29221,
                        "src": "5726:9:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 29235,
                        "name": "amountString",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29214,
                        "src": "5737:12:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 29232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5712:6:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 29231,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "5712:6:29",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 29233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5719:6:29",
                      "memberName": "concat",
                      "nodeType": "MemberAccess",
                      "src": "5712:13:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
                        "typeString": "function () pure returns (string memory)"
                      }
                    },
                    "id": 29236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5712:38:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5691:59:29"
                },
                {
                  "expression": {
                    "id": 29238,
                    "name": "leaf",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 29230,
                    "src": "5765:4:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 29204,
                  "id": 29239,
                  "nodeType": "Return",
                  "src": "5758:11:29"
                }
              ]
            },
            "baseFunctions": [29894],
            "documentation": {
              "id": 29196,
              "nodeType": "StructuredDocumentation",
              "src": "5183:201:29",
              "text": "@notice addressConcatLeaf is a view function used to construct a leaf string from an address and a uint amount\n@param _add is the input address\n@param _amount is the input amount"
            },
            "functionSelector": "1e131bf2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addressConcatLeaf",
            "nameLocation": "5398:17:29",
            "parameters": {
              "id": 29201,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29198,
                  "mutability": "mutable",
                  "name": "_add",
                  "nameLocation": "5424:4:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 29241,
                  "src": "5416:12:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29197,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5416:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29200,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "5438:7:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 29241,
                  "src": "5430:15:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29199,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5430:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5415:31:29"
            },
            "returnParameters": {
              "id": 29204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29203,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 29241,
                  "src": "5468:13:29",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 29202,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5468:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5467:15:29"
            },
            "scope": 29308,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 29255,
            "nodeType": "FunctionDefinition",
            "src": "5949:133:29",
            "nodes": [],
            "body": {
              "id": 29254,
              "nodeType": "Block",
              "src": "6033:49:29",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 29250,
                      "name": "mapDateTree",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28857,
                      "src": "6048:11:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_string_storage_$dyn_storage_$",
                        "typeString": "mapping(uint256 => string storage ref[] storage ref)"
                      }
                    },
                    "id": 29252,
                    "indexExpression": {
                      "id": 29251,
                      "name": "_effectiveDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29244,
                      "src": "6060:14:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6048:27:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                      "typeString": "string storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 29249,
                  "id": 29253,
                  "nodeType": "Return",
                  "src": "6041:34:29"
                }
              ]
            },
            "baseFunctions": [29902],
            "documentation": {
              "id": 29242,
              "nodeType": "StructuredDocumentation",
              "src": "5782:162:29",
              "text": "@notice getTreeByDate is used to retrieve a specific tree by the Date used to store it\n@param _effectiveDate is the date used to store the tree"
            },
            "functionSelector": "657d7ab8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTreeByDate",
            "nameLocation": "5958:13:29",
            "parameters": {
              "id": 29245,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29244,
                  "mutability": "mutable",
                  "name": "_effectiveDate",
                  "nameLocation": "5977:14:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 29255,
                  "src": "5972:19:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29243,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5972:4:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5971:21:29"
            },
            "returnParameters": {
              "id": 29249,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29248,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 29255,
                  "src": "6016:15:29",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 29246,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "6016:6:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 29247,
                    "nodeType": "ArrayTypeName",
                    "src": "6016:8:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6015:17:29"
            },
            "scope": 29308,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 29268,
            "nodeType": "FunctionDefinition",
            "src": "6255:131:29",
            "nodes": [],
            "body": {
              "id": 29267,
              "nodeType": "Block",
              "src": "6337:49:29",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 29263,
                      "name": "mapDateRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28844,
                      "src": "6352:11:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                        "typeString": "mapping(uint256 => string storage ref)"
                      }
                    },
                    "id": 29265,
                    "indexExpression": {
                      "id": 29264,
                      "name": "_effectiveDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29258,
                      "src": "6364:14:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6352:27:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 29262,
                  "id": 29266,
                  "nodeType": "Return",
                  "src": "6345:34:29"
                }
              ]
            },
            "baseFunctions": [29909],
            "documentation": {
              "id": 29256,
              "nodeType": "StructuredDocumentation",
              "src": "6088:162:29",
              "text": "@notice getRootByDate is used to retrieve a specific root by the Date used to store it\n@param _effectiveDate is the date used to store the tree"
            },
            "functionSelector": "291637a2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRootByDate",
            "nameLocation": "6264:13:29",
            "parameters": {
              "id": 29259,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29258,
                  "mutability": "mutable",
                  "name": "_effectiveDate",
                  "nameLocation": "6283:14:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 29268,
                  "src": "6278:19:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29257,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6278:4:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6277:21:29"
            },
            "returnParameters": {
              "id": 29262,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29261,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 29268,
                  "src": "6322:13:29",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 29260,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6322:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6321:15:29"
            },
            "scope": 29308,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 29281,
            "nodeType": "FunctionDefinition",
            "src": "6573:130:29",
            "nodes": [],
            "body": {
              "id": 29280,
              "nodeType": "Block",
              "src": "6648:55:29",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 29276,
                      "name": "mapDateQuestionID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28852,
                      "src": "6663:17:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                        "typeString": "mapping(uint256 => bytes32)"
                      }
                    },
                    "id": 29278,
                    "indexExpression": {
                      "id": 29277,
                      "name": "_effectiveDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29271,
                      "src": "6681:14:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6663:33:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 29275,
                  "id": 29279,
                  "nodeType": "Return",
                  "src": "6656:40:29"
                }
              ]
            },
            "baseFunctions": [29916],
            "documentation": {
              "id": 29269,
              "nodeType": "StructuredDocumentation",
              "src": "6392:176:29",
              "text": "@notice getQIDByDate is used to retrieve a specific reality question ID by the Date used to store it\n@param _effectiveDate is the date used to store the tree"
            },
            "functionSelector": "3c646787",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getQIDByDate",
            "nameLocation": "6582:12:29",
            "parameters": {
              "id": 29272,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29271,
                  "mutability": "mutable",
                  "name": "_effectiveDate",
                  "nameLocation": "6600:14:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 29281,
                  "src": "6595:19:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29270,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6595:4:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6594:21:29"
            },
            "returnParameters": {
              "id": 29275,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29274,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 29281,
                  "src": "6639:7:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 29273,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6639:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6638:9:29"
            },
            "scope": 29308,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 29294,
            "nodeType": "FunctionDefinition",
            "src": "6867:118:29",
            "nodes": [],
            "body": {
              "id": 29293,
              "nodeType": "Block",
              "src": "6943:42:29",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 29289,
                      "name": "mapRootToDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28861,
                      "src": "6958:13:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                        "typeString": "mapping(string memory => uint256)"
                      }
                    },
                    "id": 29291,
                    "indexExpression": {
                      "id": 29290,
                      "name": "_root",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29284,
                      "src": "6972:5:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6958:20:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 29288,
                  "id": 29292,
                  "nodeType": "Return",
                  "src": "6951:27:29"
                }
              ]
            },
            "baseFunctions": [29923],
            "documentation": {
              "id": 29282,
              "nodeType": "StructuredDocumentation",
              "src": "6709:153:29",
              "text": "@notice getDateByRoot is used to retrieve a specific Date by the Root used to store it\n@param _root is the root used to store the date"
            },
            "functionSelector": "581d8f36",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDateByRoot",
            "nameLocation": "6876:13:29",
            "parameters": {
              "id": 29285,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29284,
                  "mutability": "mutable",
                  "name": "_root",
                  "nameLocation": "6904:5:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 29294,
                  "src": "6890:19:29",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 29283,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6890:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6889:21:29"
            },
            "returnParameters": {
              "id": 29288,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29287,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 29294,
                  "src": "6934:7:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29286,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6934:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6933:9:29"
            },
            "scope": 29308,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 29307,
            "nodeType": "FunctionDefinition",
            "src": "7142:130:29",
            "nodes": [],
            "body": {
              "id": 29306,
              "nodeType": "Block",
              "src": "7219:53:29",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 29302,
                      "name": "mapDateToAnswer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28865,
                      "src": "7234:15:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                        "typeString": "mapping(uint256 => bool)"
                      }
                    },
                    "id": 29304,
                    "indexExpression": {
                      "id": 29303,
                      "name": "_effectiveDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29297,
                      "src": "7250:14:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7234:31:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 29301,
                  "id": 29305,
                  "nodeType": "Return",
                  "src": "7227:38:29"
                }
              ]
            },
            "baseFunctions": [29930],
            "documentation": {
              "id": 29295,
              "nodeType": "StructuredDocumentation",
              "src": "6991:146:29",
              "text": "@notice checkAnswerStatus is used to check the status of an answer\n@param _effectiveDate is the date used to store the question"
            },
            "functionSelector": "71c0d915",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkAnswerStatus",
            "nameLocation": "7151:17:29",
            "parameters": {
              "id": 29298,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29297,
                  "mutability": "mutable",
                  "name": "_effectiveDate",
                  "nameLocation": "7174:14:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 29307,
                  "src": "7169:19:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29296,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7169:4:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7168:21:29"
            },
            "returnParameters": {
              "id": 29301,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29300,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 29307,
                  "src": "7213:4:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 29299,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7213:4:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7212:6:29"
            },
            "scope": 29308,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 28826,
              "name": "IWrapper",
              "nameLocations": ["383:8:29"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29931,
              "src": "383:8:29"
            },
            "id": 28827,
            "nodeType": "InheritanceSpecifier",
            "src": "383:8:29"
          },
          {
            "baseName": {
              "id": 28828,
              "name": "MerkleSHA256",
              "nameLocations": ["393:12:29"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 28704,
              "src": "393:12:29"
            },
            "id": 28829,
            "nodeType": "InheritanceSpecifier",
            "src": "393:12:29"
          },
          {
            "baseName": {
              "id": 28830,
              "name": "Ownable",
              "nameLocations": ["407:7:29"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 26616,
              "src": "407:7:29"
            },
            "id": 28831,
            "nodeType": "InheritanceSpecifier",
            "src": "407:7:29"
          }
        ],
        "canonicalName": "Wrapper",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [29308, 26616, 27328, 28704, 29931],
        "name": "Wrapper",
        "nameLocation": "372:7:29",
        "scope": 29309,
        "usedErrors": []
      }
    ],
    "license": "GPL-3.0-only"
  },
  "id": 29
}
